/**
* Demandware Script File
* Used for creation of Bronto email subscription
*
* @input flowFrom : String   
* @input subscribe : Boolean
* @input profile : dw.customer.Profile
* @input customData : dw.util.Map
*/
importPackage (dw.customer);
importPackage (dw.net);
importPackage (dw.order);
importPackage (dw.rpc);
importPackage (dw.system);
importPackage (dw.util);
importPackage (dw.web);


function execute( args : PipelineDictionary ) : Number
{

    var newsSubStatus:Boolean= false ;
	var updateStatusFlag:Boolean=false;
	var customerProfile : dw.customer.Profile = args.profile;
	var flowFrom : String = args.flowFrom;
	var emailData: Object = new Object();
    var invoke:boolean = false ;
    var _httpClient : HTTPClient = new HTTPClient();
    var httpService :HTTPClient =new HTTPClient();
    
    if( flowFrom == "registration"){
    	
    	newsSubStatus=true;
    	invoke = true ; 
    		
    }else if(flowFrom=="popup"){
        newsSubStatus=true;
        updateStatusFlag =true;
    	invoke = true ; 
       
    }else {
  		 var formSubStatus : Boolean = args.subscribe;
  		 if(formSubStatus != customerProfile.custom.isNewsLetterSubscribed ){
          		newsSubStatus = formSubStatus ;
          		if(newsSubStatus){
			   	   updateStatusFlag =true;
			   	}
          		invoke =  true;          		
        	}     	
    }	
    
    if(invoke){
    	
  		var authUrl: String = dw.system.Site.getCurrent().getCustomPreferenceValue("salesforceAuthURL");
  		var postValues : String = "";
		postValues = "grant_type= password";
		postValues += "&client_id="+Site.getCurrent().getCustomPreferenceValue("salesforceClientID");
		postValues += "&client_secret="+Site.getCurrent().getCustomPreferenceValue("salesforceClientSecret");
		postValues += "&username="+ Site.getCurrent().getCustomPreferenceValue("salesforceUsername");
		postValues += "&password="+ Site.getCurrent().getCustomPreferenceValue("salesforcePassword");
		
		_httpClient.setTimeout(50000);
		_httpClient.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
  		_httpClient.open('Post', authUrl);
		
  		try{
				_httpClient.send(postValues);
				if (_httpClient.statusCode == 200)
				{
					var response: object= JSON.parse(_httpClient.text);
					var reqURL : String=response.instance_url+ "/services/apexrest/WS_Newsletter/addSubscription";
					var tokenValue : String= "Bearer "+response.access_token;
					httpService.setRequestHeader("Content-Type", "application/json");
					httpService.setRequestHeader("Authorization", tokenValue);
					httpService.setRequestHeader("Char-Set", "UTF-8");
					httpService.setTimeout(30000);
					try{
						httpService.open('Post', reqURL);
						if(null!=customerProfile){
	 					httpService.send(JSON.stringify(createProfileData(customerProfile,args.subscribe)));
						}else {
						httpService.send(JSON.stringify(createUnRegisteredProfileData(args.customData,args.subscribe)));
						}
					}catch(e){
						Logger.error("[SalesForceEmailOptin.ds]Error In connecting to the Salesforce",e.message);
						return PIPELET_ERROR;
			}
			}else {
			Logger.error("[SalesForceEmailOptin] - Error In connecting to the Salesforce -- " + e.message);
		}
				}
		catch(e){
			Logger.error("[SalesForceEmailOptin] - Error In connecting to the Salesforce",e.message);
			
			return PIPELET_ERROR;
		}
    
	
    }
   return PIPELET_NEXT;
}



function createProfileData(customerProfile: dw.customer.Profile,subscribe : Boolean){
			var siteId : String = dw.system.Site.getCurrent().ID;
			var emailData: Object = new Object();
			
			emailData.firstName=!empty(customerProfile.firstName)?customerProfile.firstName:".";
  			emailData.lastName=!empty(customerProfile.lastName)?customerProfile.lastName:".";
  			emailData.email=customerProfile.email;
  			emailData.market=Site.getCurrent().getCustomPreferenceValue("salesforceMarket");
  			emailData.country=Site.getCurrent().getCustomPreferenceValue("salesforceCountry");
  			emailData.maison=Site.getCurrent().getCustomPreferenceValue("salesforceMaison");
  			emailData.optinEmailChannel =subscribe; 
  			
  			
			
  			if(siteId.indexOf("UK")>-1 && !empty(customerProfile.title)){
  			
  				if(!dw.web.Resource.msg("title.dWValue."+customerProfile.title,'forms',null).equalsIgnoreCase("title.dWValue."+customerProfile.title))
				emailData.title=dw.web.Resource.msg("title.dWValue."+customerProfile.title,'forms',null);
			
				if(!dw.web.Resource.msg("salutation.dWValue."+customerProfile.title,'forms',null).equalsIgnoreCase("salutation.dWValue."+customerProfile.title))
				emailData.salutation=dw.web.Resource.msg("salutation.dWValue."+customerProfile.title,'forms',null);
				
				if(!dw.web.Resource.msg("gender.dWValue."+customerProfile.title,'forms',null).equalsIgnoreCase("gender.dWValue."+customerProfile.title)){
				emailData.gender=dw.web.Resource.msg("gender.dWValue."+customerProfile.title,'forms',null);
				}
			}else if(customerProfile.salutation){
			
				if(!dw.web.Resource.msg("gender.dWValue."+customerProfile.salutation,'forms',null).equalsIgnoreCase("gender.dWValue."+customerProfile.salutation))
  				emailData.gender=dw.web.Resource.msg("gender.dWValue."+customerProfile.salutation,'forms',null);
  				
  				emailData.salutation=dw.web.Resource.msg("salutation.dWValue."+customerProfile.salutation,'forms',customerProfile.salutation);
  				
  				if(customerProfile.title){
				emailData.title=dw.web.Resource.msg("title.dWValue."+customerProfile.title,'forms',customerProfile.title);
  				
  				}
  			}
			
			
			if(customerProfile.birthday){
				emailData.birthDay	=customerProfile.birthday.getDate().toString();
				emailData.birthMonth =customerProfile.birthday.getMonth()+1;
				emailData.birthYear=customerProfile.birthday.getFullYear().toString();
			}
			
			if ("magentoJoinedDate" in customerProfile.custom){
				emailData.joinedDate =customerProfile.custom.magentoJoinedDate;
			}else{
				emailData.joinedDate =StringUtils.formatCalendar(new Calendar(customerProfile.getCreationDate()), "yyyy-MM-dd");
			}
			
			if(("registrationChannel" in customerProfile.custom &&( customerProfile.custom.registrationChannel.equalsIgnoreCase("partner")||customerProfile.custom.registrationChannel.equalsIgnoreCase("lead")||customerProfile.custom.registrationChannel.equalsIgnoreCase("referafriend"))) || ( "source" in customerProfile.custom && customerProfile.custom.source.equalsIgnoreCase("magento")) ){
			emailData.contactCreationSource ="eCommerce";
			}else{
			emailData.contactCreationSource ="Customer Care";
			}
			
			return emailData;
}

function createUnRegisteredProfileData(customData : dw.util.Map,subscribe:Boolean){
	 		var siteId : String = dw.system.Site.getCurrent().ID;
			var emailData: Object = new Object();
			if (customData.get("email")!=null){
			
			emailData.firstName=customData.containsKey("firstname") ? customData.get("firstname") : "."
			emailData.lastName=customData.containsKey("lastname") ? customData.get("lastname") : ".";
  			emailData.email=customData .get("email");
  			emailData.market=Site.getCurrent().getCustomPreferenceValue("salesforceMarket");
  			emailData.country=Site.getCurrent().getCustomPreferenceValue("salesforceCountry");
  			emailData.maison=Site.getCurrent().getCustomPreferenceValue("salesforceMaison");
  			emailData.optinEmailChannel = subscribe;
  		
  			if(siteId.indexOf("UK")>-1 && !empty(customData.containsKey("title"))){
  			
  				if(!dw.web.Resource.msg("title.dWValue."+customData.get("title"),'forms',null).equalsIgnoreCase("title.dWValue."+customData.get("title")))
				emailData.title=dw.web.Resource.msg("title.dWValue."+customData.get("title"),'forms',null);
			
				if(!dw.web.Resource.msg("salutation.dWValue."+customData.get("title"),'forms',null).equalsIgnoreCase("salutation.dWValue."+customData.get("title")))
				emailData.salutation=dw.web.Resource.msg("salutation.dWValue."+customData.get("title"),'forms',null);
				
				if(!dw.web.Resource.msg("gender.dWValue."+customData.get("title"),'forms',null).equalsIgnoreCase("gender.dWValue."+customData.get("title"))){
				emailData.gender=dw.web.Resource.msg("gender.dWValue."+customData.get("title"),'forms',null);
				}
			}else if(customData.containsKey("salutation")){
			
				if(!dw.web.Resource.msg("gender.dWValue."+customData.containsKey("salutation"),'forms',null).equalsIgnoreCase("gender.dWValue."+customData.containsKey("salutation")))
  				emailData.gender=dw.web.Resource.msg("gender.dWValue."+customData.containsKey("salutation"),'forms',null);
  				
  				emailData.salutation=dw.web.Resource.msg("salutation.dWValue."+customData.containsKey("salutation"),'forms',customData.containsKey("salutation"));
  				
  				if(customData.containsKey("title")){
				emailData.title=dw.web.Resource.msg("title.dWValue."+customData.get("title"),'forms',customData.get("title"));
  				
  				}
  			}
  			
			
			if(customData.get("birthday")){
				var birthDate : Date = new Date(customData.get("birthday"));
				emailData.birthDay	=birthDate.getDate().toString();
				emailData.birthMonth =birthDate.getMonth()+1;
				emailData.birthYear=birthDate.getFullYear().toString();
			}
			emailData.contactCreationSource ="eCommerce";
			}
			return emailData;
}
