<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline type="process">
  <branch basename="Twitter">
    <segment>
      <node>
        <start-node call-mode="private" name="Twitter" secure="false"/>
        <node-display x="1" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="socialfeed/twitter.ds"/>
          <config-property key="Timeout" value="3600"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="jsonStr" key="json"/>
          <key-binding alias="ErrorMessage" key="errorMessage"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <jump-node start-name-ref="SocialFeed-TwitterJobFail"/>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="!empty(jsonStr)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="socialfeed/impexWriter.ds"/>
                <key-binding alias="null" key="ScriptLog"/>
                <key-binding alias="jsonStr" key="jsonStr"/>
                <key-binding alias="ErrorMessage" key="errorMessage"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="1" y="0"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <jump-node start-name-ref="SocialFeed-TwitterJobFail"/>
                    <node-display orientation="horizontal" x="1" y="0"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="SUCCESS"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="SUCCESS"/>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="TwitterJobFail">
    <segment>
      <node>
        <start-node call-mode="private" name="TwitterJobFail" secure="false"/>
        <node-display x="4" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="EmailFlow" key="To_0"/>
          <key-binding alias="true" key="From_1"/>
          <key-binding alias="InstanceReqd" key="To_1"/>
          <key-binding alias="new dw.util.HashMap()" key="From_2"/>
          <key-binding alias="MailParams" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
          <key-binding alias="&quot;twitter_job_error&quot;" key="From_0"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="null" key="From_0"/>
          <key-binding alias="null" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="MailParams.put(&quot;ErrorMessage&quot;,ErrorMessage )" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="MailParams.put(&quot;SiteId&quot;,dw.system.Site.getCurrent().ID)" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="To_9"/>
          <key-binding alias="MailParams.put(&quot;RemoteFile&quot;,RemoteFile )" key="From_6"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Email-SendMail"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="To_9"/>
          <key-binding alias="InstanceReqd" key="To_1"/>
          <key-binding alias="MailSubject" key="To_0"/>
          <key-binding alias="&quot;&quot;" key="From_0"/>
          <key-binding alias="false" key="From_1"/>
          <key-binding alias="MailTo" key="To_2"/>
          <key-binding alias="&quot;&quot;" key="From_2"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="FAILED"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
</pipeline>
