<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline group="Feeds" type="job">
  <branch basename="_ANONYMOUS_BRANCH_1">
    <segment>
      <node>
        <text-node>
          <description>Feed execution steps pipeline. Do not change in project.</description>
        </text-node>
        <node-display x="0" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="UploadFeed">
    <segment>
      <node>
        <start-node call-mode="private" name="UploadFeed" secure="false"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="dw.system.Site.getCurrent().getCustomPreferenceValue('bypassRemoteUpload')" key="From_0"/>
          <key-binding alias="BypassRemoteUpload" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="feeds/UploadFeed.ds"/>
          <config-property key="Timeout" value="3600"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="Task.getParameter('remoteFolderUrl')" key="RemoteFolderURL"/>
          <key-binding alias="Task.getParameter('remoteLogin')" key="RemoteLogin"/>
          <key-binding alias="Task.getParameter('remotePassword')" key="RemotePassword"/>
          <key-binding alias="File" key="File"/>
          <key-binding alias="RemoteFile" key="RemoteFile"/>
          <key-binding alias="dw.system.Site.getCurrent().getCustomPreferenceValue('bypassRemoteUpload')" key="bypassRemoteUpload"/>
          <key-binding alias="BypassRemoteUpload" key="BypassRemoteUpload"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node custom-name="Task.setErrorStatusMessage()" pipelet-name="Eval" pipelet-set-identifier="bc_api">
                <config-property key="OnError" value="null"/>
                <config-property key="Transactional" value="true"/>
                <config-property key="Expression" value="Task.setErrorStatusMessage(&quot;Failed to upload file: &quot; + File)"/>
                <key-binding alias="Result" key="Result"/>
              </pipelet-node>
              <node-display x="1" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="&quot;upload_error&quot;" key="From_0"/>
                <key-binding alias="EmailFlow" key="To_0"/>
                <key-binding alias="true" key="From_1"/>
                <key-binding alias="InstanceReqd" key="To_1"/>
                <key-binding alias="new dw.util.HashMap()" key="From_2"/>
                <key-binding alias="MailParams" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="null" key="From_0"/>
                <key-binding alias="null" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="MailParams.put(&quot;SiteId&quot;,dw.system.Site.getCurrent().ID)" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="MailParams.put(&quot;RemoteURL&quot;, Task.getParameter('remoteFolderUrl'))" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="MailParams.put(&quot;JobConfigurationId&quot;,JobConfigID)" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
                <key-binding alias="MailParams.put(&quot;RemoteFile&quot;,RemoteFile )" key="From_6"/>
                <key-binding alias="MailParams.put(&quot;ErrorMessage&quot;,&quot;File Upload failed to SFTP. please refer attached log&quot; )" key="From_5"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="FAILED"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="SUCCESS"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="DownloadFeed">
    <segment>
      <node>
        <start-node call-mode="private" name="DownloadFeed" secure="false"/>
        <node-display x="2" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
          <bend-point relative-to="target" x="-1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="feeds/DownloadFeed.ds"/>
          <config-property key="Timeout" value="3600"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="File" key="File"/>
          <key-binding alias="TechnicalError" key="TechnicalError"/>
          <key-binding alias="RemoteFileURL" key="RemoteFileURL"/>
          <key-binding alias="Task.getParameter('remoteFilePattern')" key="RemoteFilePattern"/>
          <key-binding alias="Task.getParameter('remoteFolderUrl')" key="RemoteFolderURL"/>
          <key-binding alias="Task.getParameter('remoteLogin')" key="RemoteLogin"/>
          <key-binding alias="Task.getParameter('remotePassword')" key="RemotePassword"/>
          <key-binding alias="Task.getParameter('tempFolder')" key="TempFolder"/>
          <key-binding alias="RemoteFile" key="RemoteFile"/>
          <key-binding alias="Task.getParameter('fileListBased', false)" key="FileListBased"/>
          <key-binding alias="RemoteFileList" key="InboundFileList"/>
          <key-binding alias="RemoteFileList" key="OutboundFileList"/>
          <key-binding alias="LastProcessedTimestamp" key="LastProcessedTimestamp"/>
          <key-binding alias="ReplayFile" key="ReplayFile"/>
          <key-binding alias="Task.getParameter('replayFileCheck')" key="ReplayFileCheck"/>
          <key-binding alias="Task.getParameter('fileNameBasedReplayCheck')" key="FileReplayCheck"/>
          <key-binding alias="Task.getParameter('fileNameBasedReplayCheck', false)" key="FileNameBasedReplayCheck"/>
          <key-binding alias="Task.getParameter('replayDisabled',true)" key="ReplayDisabled"/>
        </pipelet-node>
        <node-display orientation="horizontal" x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in"/>
          <segment>
            <node>
              <decision-node condition-key="ReplayFile=='FALSE'" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="0" y="1"/>
                    <bend-point relative-to="source" x="-1" y="1"/>
                    <bend-point relative-to="target" x="-1" y="0"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <decision-node condition-key="TechnicalError == 'CONNECTIONFAIL'" condition-operator="expr"/>
                    <node-display orientation="horizontal" x="0" y="1"/>
                    <branch basename="b2" source-connector="yes">
                      <transition target-connector="in">
                        <transition-display>
                          <bend-point relative-to="source" x="1" y="0"/>
                        </transition-display>
                      </transition>
                      <segment>
                        <node>
                          <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                            <config-property key="Transactional" value="false"/>
                            <key-binding alias="&quot;download_error&quot;" key="From_0"/>
                            <key-binding alias="EmailFlow" key="To_0"/>
                            <key-binding alias="true" key="From_1"/>
                            <key-binding alias="InstanceReqd" key="To_1"/>
                            <key-binding alias="new dw.util.HashMap()" key="From_2"/>
                            <key-binding alias="MailParams" key="To_2"/>
                            <key-binding alias="null" key="From_3"/>
                            <key-binding alias="null" key="To_3"/>
                            <key-binding alias="null" key="From_4"/>
                            <key-binding alias="null" key="To_4"/>
                            <key-binding alias="null" key="From_5"/>
                            <key-binding alias="null" key="To_5"/>
                            <key-binding alias="null" key="From_6"/>
                            <key-binding alias="null" key="To_6"/>
                            <key-binding alias="null" key="From_7"/>
                            <key-binding alias="null" key="To_7"/>
                            <key-binding alias="null" key="From_8"/>
                            <key-binding alias="null" key="To_8"/>
                            <key-binding alias="null" key="From_9"/>
                            <key-binding alias="null" key="To_9"/>
                          </pipelet-node>
                          <node-display orientation="horizontal" x="1" y="0"/>
                        </node>
                        <simple-transition>
                          <transition-display>
                            <bend-point relative-to="source" x="1" y="0"/>
                          </transition-display>
                        </simple-transition>
                        <node>
                          <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                            <config-property key="Transactional" value="false"/>
                            <key-binding alias="null" key="From_0"/>
                            <key-binding alias="null" key="To_0"/>
                            <key-binding alias="null" key="From_1"/>
                            <key-binding alias="null" key="To_1"/>
                            <key-binding alias="null" key="From_2"/>
                            <key-binding alias="null" key="To_2"/>
                            <key-binding alias="null" key="From_3"/>
                            <key-binding alias="null" key="To_3"/>
                            <key-binding alias="null" key="To_4"/>
                            <key-binding alias="MailParams.put(&quot;ErrorMessage&quot;,&quot;SFTP connect operation failed refer attached log for detail&quot;)" key="From_5"/>
                            <key-binding alias="null" key="To_5"/>
                            <key-binding alias="null" key="To_6"/>
                            <key-binding alias="MailParams.put(&quot;SiteId&quot;,dw.system.Site.getCurrent().ID)" key="From_7"/>
                            <key-binding alias="null" key="To_7"/>
                            <key-binding alias="MailParams.put(&quot;RemoteURL&quot;, Task.getParameter('remoteFolderUrl'))" key="From_8"/>
                            <key-binding alias="null" key="To_8"/>
                            <key-binding alias="MailParams.put(&quot;JobConfigurationId&quot;,JobConfigID)" key="From_9"/>
                            <key-binding alias="null" key="To_9"/>
                            <key-binding alias="MailParams.put(&quot;RemoteFile&quot;,RemoteFile)" key="From_6"/>
                            <key-binding alias="null" key="From_4"/>
                          </pipelet-node>
                          <node-display orientation="horizontal" x="1" y="0"/>
                        </node>
                        <transition target-connector="in1" target-path="../../+1">
                          <transition-display>
                            <bend-point relative-to="source" x="1" y="0"/>
                            <bend-point relative-to="target" x="1" y="0"/>
                          </transition-display>
                        </transition>
                      </segment>
                    </branch>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="1"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <decision-node condition-key="TechnicalError=='TRUE'" condition-operator="expr"/>
                    <node-display x="0" y="1"/>
                    <branch basename="b3" source-connector="yes">
                      <transition target-connector="in">
                        <transition-display>
                          <bend-point relative-to="source" x="0" y="1"/>
                        </transition-display>
                      </transition>
                      <segment>
                        <node>
                          <pipelet-node custom-name="Task.setStatusMessage(&quot;Feed file download failure&quot;)" pipelet-name="Eval" pipelet-set-identifier="bc_api">
                            <config-property key="OnError" value="null"/>
                            <config-property key="Transactional" value="true"/>
                            <config-property key="Expression" value="Task.setStatusMessage(&quot;Feed file download failure.&quot;)"/>
                            <key-binding alias="Result" key="Result"/>
                          </pipelet-node>
                          <node-display x="0" y="1"/>
                        </node>
                        <simple-transition>
                          <transition-display>
                            <bend-point relative-to="source" x="0" y="1"/>
                          </transition-display>
                        </simple-transition>
                        <node>
                          <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                            <config-property key="Transactional" value="false"/>
                            <key-binding alias="&quot;download_error&quot;" key="From_0"/>
                            <key-binding alias="EmailFlow" key="To_0"/>
                            <key-binding alias="true" key="From_1"/>
                            <key-binding alias="InstanceReqd" key="To_1"/>
                            <key-binding alias="new dw.util.HashMap()" key="From_2"/>
                            <key-binding alias="MailParams" key="To_2"/>
                            <key-binding alias="null" key="From_3"/>
                            <key-binding alias="null" key="To_3"/>
                            <key-binding alias="null" key="From_4"/>
                            <key-binding alias="null" key="To_4"/>
                            <key-binding alias="null" key="From_5"/>
                            <key-binding alias="null" key="To_5"/>
                            <key-binding alias="null" key="From_6"/>
                            <key-binding alias="null" key="To_6"/>
                            <key-binding alias="null" key="From_7"/>
                            <key-binding alias="null" key="To_7"/>
                            <key-binding alias="null" key="From_8"/>
                            <key-binding alias="null" key="To_8"/>
                            <key-binding alias="null" key="From_9"/>
                            <key-binding alias="null" key="To_9"/>
                          </pipelet-node>
                          <node-display x="0" y="1"/>
                        </node>
                        <simple-transition>
                          <transition-display>
                            <bend-point relative-to="source" x="0" y="1"/>
                          </transition-display>
                        </simple-transition>
                        <node>
                          <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                            <config-property key="Transactional" value="false"/>
                            <key-binding alias="null" key="From_0"/>
                            <key-binding alias="null" key="To_0"/>
                            <key-binding alias="null" key="From_1"/>
                            <key-binding alias="null" key="To_1"/>
                            <key-binding alias="null" key="From_2"/>
                            <key-binding alias="null" key="To_2"/>
                            <key-binding alias="null" key="From_3"/>
                            <key-binding alias="null" key="To_3"/>
                            <key-binding alias="null" key="To_4"/>
                            <key-binding alias="MailParams.put(&quot;ErrorMessage&quot;,&quot;Unable to download feed file refer attached log for detail&quot;)" key="From_5"/>
                            <key-binding alias="null" key="To_5"/>
                            <key-binding alias="null" key="To_6"/>
                            <key-binding alias="MailParams.put(&quot;SiteId&quot;,dw.system.Site.getCurrent().ID)" key="From_7"/>
                            <key-binding alias="null" key="To_7"/>
                            <key-binding alias="MailParams.put(&quot;RemoteURL&quot;, Task.getParameter('remoteFolderUrl'))" key="From_8"/>
                            <key-binding alias="null" key="To_8"/>
                            <key-binding alias="MailParams.put(&quot;JobConfigurationId&quot;,JobConfigID)" key="From_9"/>
                            <key-binding alias="null" key="To_9"/>
                            <key-binding alias="MailParams.put(&quot;RemoteFile&quot;,RemoteFile)" key="From_6"/>
                            <key-binding alias="null" key="From_4"/>
                          </pipelet-node>
                          <node-display x="0" y="1"/>
                        </node>
                        <simple-transition>
                          <transition-display>
                            <bend-point relative-to="source" x="0" y="1"/>
                          </transition-display>
                        </simple-transition>
                        <node>
                          <end-node name="FAILED"/>
                          <node-display x="0" y="1"/>
                        </node>
                      </segment>
                    </branch>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="2" y="0"/>
                      <bend-point relative-to="target" x="0" y="-1"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <end-node name="NO_MORE_FILES"/>
                    <node-display x="1" y="3"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="&quot;replay_error&quot;" key="From_0"/>
                <key-binding alias="EmailFlow" key="To_0"/>
                <key-binding alias="true" key="From_1"/>
                <key-binding alias="InstanceReqd" key="To_1"/>
                <key-binding alias="new dw.util.HashMap()" key="From_2"/>
                <key-binding alias="MailParams" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="null" key="From_0"/>
                <key-binding alias="null" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="MailParams.put(&quot;ErrorMessage&quot;,&quot;Feed file arrived for replay the last feed file processed timestamp was &quot;+LastProcessedTimestamp)" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="MailParams.put(&quot;SiteId&quot;,dw.system.Site.getCurrent().ID)" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="MailParams.put(&quot;RemoteURL&quot;, Task.getParameter('remoteFolderUrl'))" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="MailParams.put(&quot;JobConfigurationId&quot;,JobConfigID)" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
                <key-binding alias="MailParams.put(&quot;RemoteFile&quot;,RemoteFile)" key="From_6"/>
              </pipelet-node>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="./+1">
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
                <bend-point relative-to="target" x="1" y="0"/>
              </transition-display>
            </transition>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="3"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="target" x="0" y="-1"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="FAILED"/>
              <node-display x="0" y="2"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="DeleteFeed">
    <segment>
      <node>
        <start-node call-mode="private" name="DeleteFeed" secure="false"/>
        <node-display x="5" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="Task.getParameter('deleteRemoteFile', true) === true" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="feeds/DeleteFeed.ds"/>
                <config-property key="Timeout" value="3600"/>
                <key-binding alias="null" key="ScriptLog"/>
                <key-binding alias="RemoteFileURL" key="RemoteFileURL"/>
                <key-binding alias="Task.getParameter('remoteLogin')" key="RemoteLogin"/>
                <key-binding alias="Task.getParameter('remotePassword')" key="RemotePassword"/>
                <key-binding alias="RemoteFile" key="RemoteFile"/>
                <key-binding alias="Task.getParameter('remoteFolderUrl')" key="RemoteFolderURL"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="2" y="0"/>
                    <bend-point relative-to="target" x="0" y="-1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="&quot;delete_error&quot;" key="From_0"/>
                      <key-binding alias="EmailFlow" key="To_0"/>
                      <key-binding alias="true" key="From_1"/>
                      <key-binding alias="InstanceReqd" key="To_1"/>
                      <key-binding alias="new dw.util.HashMap()" key="From_2"/>
                      <key-binding alias="MailParams" key="To_2"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="null" key="From_4"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="null" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                    </pipelet-node>
                    <node-display x="1" y="1"/>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="1"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="null" key="From_0"/>
                      <key-binding alias="null" key="To_0"/>
                      <key-binding alias="null" key="From_1"/>
                      <key-binding alias="null" key="To_1"/>
                      <key-binding alias="null" key="From_2"/>
                      <key-binding alias="null" key="To_2"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="MailParams.put(&quot;ErrorMessage&quot;,&quot;Unable to delete feed file from SFTP , refer attached log for more detail&quot;)" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="MailParams.put(&quot;SiteId&quot;,dw.system.Site.getCurrent().ID)" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="MailParams.put(&quot;RemoteURL&quot;, Task.getParameter('remoteFolderUrl'))" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="MailParams.put(&quot;JobConfigurationId&quot;,JobConfigID)" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                      <key-binding alias="MailParams.put(&quot;RemoteFile&quot;,RemoteFile)" key="From_6"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="1"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <end-node name="FAILED"/>
                    <node-display x="0" y="1"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="target" x="0" y="-2"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="2" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_5">
    <segment>
      <node>
        <text-node>
          <description>We cannot validate CSV files at this time (APP-12970). Skip validation for Active Data.</description>
        </text-node>
        <node-display x="8" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="ValidateFeed">
    <segment>
      <node>
        <start-node call-mode="private" name="ValidateFeed" secure="false"/>
        <node-display x="8" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="Task.getParameter('impexType')!='activedata' &amp;&amp; Task.getParameter('impexType')!='orderstatus'" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node custom-name="reset ValidationStatus" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="null" key="From_0"/>
                <key-binding alias="ValidationStatus" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="2"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="ValidateXMLFile" pipelet-set-identifier="bc_api">
                <key-binding alias="File" key="File"/>
                <key-binding alias="Task.getValidationSchema()" key="Schema"/>
                <key-binding alias="null" key="LogFileName"/>
                <key-binding alias="null" key="ErrorCount"/>
                <key-binding alias="null" key="WarningCount"/>
                <key-binding alias="ValidationStatus" key="Status"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in1" target-path="./+1">
                  <transition-display>
                    <bend-point relative-to="source" x="2" y="0"/>
                  </transition-display>
                </transition>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <decision-node condition-key="ValidationStatus.code=='IMPEX-0'" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b3" source-connector="yes">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <pipelet-node custom-name="Task.setStatusMessage()" pipelet-name="Eval" pipelet-set-identifier="bc_api">
                      <config-property key="OnError" value="null"/>
                      <config-property key="Transactional" value="true"/>
                      <config-property key="Expression" value="Task.setStatusMessage((&quot;Validation of file &quot; + File + &quot; successfully completed. ValidationLogFile: &quot; + ValidationStatus.details.LogFileName + &quot;; ValidationErrorCount: &quot; + ValidationStatus.details.ValidationErrorCount))"/>
                      <key-binding alias="Result" key="Result"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition/>
                  <node>
                    <end-node/>
                    <node-display x="0" y="1"/>
                  </node>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node custom-name="Task.setErrorStatusMessage()" pipelet-name="Eval" pipelet-set-identifier="bc_api">
                <config-property key="OnError" value="null"/>
                <config-property key="Transactional" value="true"/>
                <config-property key="Expression" value="Task.setErrorStatusMessage((&quot;Validation of file &quot; + File + &quot; failed. ValidationLogFile: &quot; + ValidationStatus.details.LogFileName + &quot;; ValidationErrorCount: &quot; + ValidationStatus.details.ValidationErrorCount))"/>
                <key-binding alias="Result" key="Result"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="&quot;validation_error&quot;" key="From_0"/>
                <key-binding alias="EmailFlow" key="To_0"/>
                <key-binding alias="true" key="From_1"/>
                <key-binding alias="InstanceReqd" key="To_1"/>
                <key-binding alias="new dw.util.HashMap()" key="From_2"/>
                <key-binding alias="MailParams" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="null" key="From_0"/>
                <key-binding alias="null" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="MailParams.put(&quot;ErrorMessage&quot;,&quot;Validation failed check log file https://&quot;+dw.system.System.getInstanceHostname()+&quot;/on/demandware.servlet/webdav/Sites/Impex/log/&quot;+ValidationStatus.LogFileName)" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="MailParams.put(&quot;SiteId&quot;,dw.system.Site.getCurrent().ID)" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="MailParams.put(&quot;RemoteURL&quot;, Task.getParameter('remoteFolderUrl'))" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="MailParams.put(&quot;JobConfigurationId&quot;,JobConfigID)" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
                <key-binding alias="MailParams.put(&quot;RemoteFile&quot;,RemoteFile)" key="From_6"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <call-node start-name-ref="FeedSteps-DeleteFeed"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <end-node name="FAILED"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="target" x="0" y="-2"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="2" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="ImportFeed">
    <segment>
      <node>
        <start-node call-mode="private" name="ImportFeed" secure="false"/>
        <node-display x="11" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="reset ImportStatus" pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="null" key="From_0"/>
          <key-binding alias="ImportStatus" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="FeedSteps-RunTypeSpecificImport"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="PROCESS_ERROR">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="&quot;process_error&quot;" key="From_0"/>
                <key-binding alias="EmailFlow" key="To_0"/>
                <key-binding alias="true" key="From_1"/>
                <key-binding alias="InstanceReqd" key="To_1"/>
                <key-binding alias="new dw.util.HashMap()" key="From_2"/>
                <key-binding alias="MailParams" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="null" key="From_0"/>
                <key-binding alias="null" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="MailParams.put(&quot;ErrorMessage&quot;,&quot;Failure during execution of feed import&quot;)" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="MailParams.put(&quot;SiteId&quot;,dw.system.Site.getCurrent().ID)" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="MailParams.put(&quot;RemoteURL&quot;, Task.getParameter('remoteFolderUrl'))" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="MailParams.put(&quot;JobConfigurationId&quot;,JobConfigID)" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
                <key-binding alias="MailParams.put(&quot;RemoteFile&quot;,RemoteFile)" key="From_6"/>
              </pipelet-node>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="./+1">
              <transition-display>
                <bend-point relative-to="target" x="0" y="-2"/>
              </transition-display>
            </transition>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="2" y="1"/>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="2"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
                <bend-point relative-to="target" x="0" y="-1"/>
              </transition-display>
            </simple-transition>
            <node>
              <call-node start-name-ref="FeedSteps-HandleImportError"/>
              <node-display x="-1" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="target" x="0" y="-1"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="FAILED"/>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
        <branch basename="b3" source-connector="PROCESS_SUCCESS">
          <transition target-connector="in"/>
          <segment>
            <node>
              <decision-node condition-key="Task.getParameter('impexType')!='orderstatus'" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="target" x="0" y="-1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <decision-node condition-key="ImportStatus.details.DataErrorCount==0 || Task.getParameter('ignoreDataErrors', false)" condition-operator="expr"/>
                    <node-display x="0" y="2"/>
                    <branch basename="b2" source-connector="yes">
                      <transition target-connector="in">
                        <transition-display>
                          <bend-point relative-to="source" x="0" y="1"/>
                        </transition-display>
                      </transition>
                      <segment>
                        <node>
                          <pipelet-node custom-name="Task.setStatusMessage()" pipelet-name="Eval" pipelet-set-identifier="bc_api">
                            <config-property key="OnError" value="null"/>
                            <config-property key="Transactional" value="true"/>
                            <config-property key="Expression" value="Task.setStatusMessage((&quot;Import of file &quot; + File + &quot; successfully processed. ImportLogFile: &quot; + ImportStatus.details.LogFileName + &quot;; DataErrorCount: &quot; + ImportStatus.details.DataErrorCount + &quot;; DataWarningCount: &quot; + ImportStatus.details.DataWarningCount))"/>
                            <key-binding alias="Result" key="Result"/>
                          </pipelet-node>
                          <node-display x="0" y="1"/>
                        </node>
                        <simple-transition>
                          <transition-display>
                            <bend-point relative-to="source" x="0" y="1"/>
                          </transition-display>
                        </simple-transition>
                        <node>
                          <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                            <config-property key="Transactional" value="true"/>
                            <config-property key="OnError" value="PIPELET_ERROR"/>
                            <config-property key="ScriptFile" value="customization/UpdateJobConfigurationTask.ds"/>
                            <key-binding alias="null" key="ScriptLog"/>
                            <key-binding alias="File" key="Filename"/>
                            <key-binding alias="LastProcessedFileTimestamp" key="LastProcessedFileTimestamp"/>
                            <key-binding alias="JobConfigID" key="JobConfigID"/>
                          </pipelet-node>
                          <node-display x="0" y="1"/>
                          <branch basename="b2" source-connector="error">
                            <transition target-connector="in">
                              <transition-display>
                                <bend-point relative-to="source" x="1" y="0"/>
                              </transition-display>
                            </transition>
                            <segment>
                              <node>
                                <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                                  <config-property key="Transactional" value="false"/>
                                  <key-binding alias="&quot;Feed process failed while updating the last processed timestamp in Job Configuration&quot;" key="From_0"/>
                                  <key-binding alias="ErrorMessage" key="To_0"/>
                                  <key-binding alias="null" key="From_1"/>
                                  <key-binding alias="null" key="To_1"/>
                                  <key-binding alias="null" key="From_2"/>
                                  <key-binding alias="null" key="To_2"/>
                                  <key-binding alias="null" key="From_3"/>
                                  <key-binding alias="null" key="To_3"/>
                                  <key-binding alias="null" key="From_4"/>
                                  <key-binding alias="null" key="To_4"/>
                                  <key-binding alias="null" key="From_5"/>
                                  <key-binding alias="null" key="To_5"/>
                                  <key-binding alias="null" key="From_6"/>
                                  <key-binding alias="null" key="To_6"/>
                                  <key-binding alias="null" key="From_7"/>
                                  <key-binding alias="null" key="To_7"/>
                                  <key-binding alias="null" key="From_8"/>
                                  <key-binding alias="null" key="To_8"/>
                                  <key-binding alias="null" key="From_9"/>
                                  <key-binding alias="null" key="To_9"/>
                                </pipelet-node>
                                <node-display orientation="horizontal" x="1" y="0"/>
                              </node>
                              <simple-transition>
                                <transition-display>
                                  <bend-point relative-to="source" x="1" y="0"/>
                                </transition-display>
                              </simple-transition>
                              <node>
                                <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                                  <config-property key="Transactional" value="false"/>
                                  <key-binding alias="&quot;process_error&quot;" key="From_0"/>
                                  <key-binding alias="EmailFlow" key="To_0"/>
                                  <key-binding alias="true" key="From_1"/>
                                  <key-binding alias="InstanceReqd" key="To_1"/>
                                  <key-binding alias="new dw.util.HashMap()" key="From_2"/>
                                  <key-binding alias="MailParams" key="To_2"/>
                                  <key-binding alias="null" key="From_3"/>
                                  <key-binding alias="null" key="To_3"/>
                                  <key-binding alias="null" key="From_4"/>
                                  <key-binding alias="null" key="To_4"/>
                                  <key-binding alias="null" key="From_5"/>
                                  <key-binding alias="null" key="To_5"/>
                                  <key-binding alias="null" key="From_6"/>
                                  <key-binding alias="null" key="To_6"/>
                                  <key-binding alias="null" key="From_7"/>
                                  <key-binding alias="null" key="To_7"/>
                                  <key-binding alias="null" key="From_8"/>
                                  <key-binding alias="null" key="To_8"/>
                                  <key-binding alias="null" key="From_9"/>
                                  <key-binding alias="null" key="To_9"/>
                                </pipelet-node>
                                <node-display orientation="horizontal" x="1" y="0"/>
                              </node>
                              <simple-transition>
                                <transition-display>
                                  <bend-point relative-to="source" x="1" y="0"/>
                                </transition-display>
                              </simple-transition>
                              <node>
                                <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                                  <config-property key="Transactional" value="false"/>
                                  <key-binding alias="null" key="From_0"/>
                                  <key-binding alias="null" key="To_0"/>
                                  <key-binding alias="null" key="From_1"/>
                                  <key-binding alias="null" key="To_1"/>
                                  <key-binding alias="null" key="From_2"/>
                                  <key-binding alias="null" key="To_2"/>
                                  <key-binding alias="null" key="From_3"/>
                                  <key-binding alias="null" key="To_3"/>
                                  <key-binding alias="null" key="From_4"/>
                                  <key-binding alias="null" key="To_4"/>
                                  <key-binding alias="MailParams.put(&quot;ErrorMessage&quot;,ErrorMessage )" key="From_5"/>
                                  <key-binding alias="null" key="To_5"/>
                                  <key-binding alias="null" key="To_6"/>
                                  <key-binding alias="MailParams.put(&quot;SiteId&quot;,dw.system.Site.getCurrent().ID)" key="From_7"/>
                                  <key-binding alias="null" key="To_7"/>
                                  <key-binding alias="MailParams.put(&quot;RemoteURL&quot;, Task.getParameter('remoteFolderUrl'))" key="From_8"/>
                                  <key-binding alias="null" key="To_8"/>
                                  <key-binding alias="MailParams.put(&quot;JobConfigurationId&quot;,JobConfigID)" key="From_9"/>
                                  <key-binding alias="null" key="To_9"/>
                                  <key-binding alias="MailParams.put(&quot;RemoteFile&quot;,RemoteFile )" key="From_6"/>
                                </pipelet-node>
                                <node-display orientation="horizontal" x="1" y="0"/>
                              </node>
                              <simple-transition>
                                <transition-display>
                                  <bend-point relative-to="source" x="1" y="0"/>
                                  <bend-point relative-to="source" x="1" y="1"/>
                                  <bend-point relative-to="source" x="0" y="1"/>
                                </transition-display>
                              </simple-transition>
                              <node>
                                <end-node name="FAILED"/>
                                <node-display x="0" y="1"/>
                              </node>
                            </segment>
                          </branch>
                        </node>
                        <simple-transition/>
                        <node>
                          <pipelet-node custom-name="Task.setStatusMessage()" pipelet-name="Eval" pipelet-set-identifier="bc_api">
                            <config-property key="OnError" value="null"/>
                            <config-property key="Transactional" value="true"/>
                            <config-property key="Expression" value="Task.setStatusMessage((&quot;Custom attribute  and allocation quantity successfully updated&quot; ))"/>
                            <key-binding alias="Result" key="Result"/>
                          </pipelet-node>
                          <node-display x="0" y="1"/>
                        </node>
                        <simple-transition>
                          <transition-display>
                            <bend-point relative-to="source" x="0" y="1"/>
                          </transition-display>
                        </simple-transition>
                        <node>
                          <end-node/>
                          <node-display x="0" y="1"/>
                        </node>
                      </segment>
                    </branch>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="1" y="0"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <pipelet-node custom-name="Task.setErrorStatusMessage()" pipelet-name="Eval" pipelet-set-identifier="bc_api">
                      <config-property key="OnError" value="null"/>
                      <config-property key="Transactional" value="true"/>
                      <config-property key="Expression" value="Task.setErrorStatusMessage((&quot;Import of file &quot; + File + &quot; failed. ImportLogFile: &quot; + ImportStatus.details.LogFileName + &quot;; DataErrorCount: &quot; + ImportStatus.details.DataErrorCount + &quot;; DataWarningCount: &quot; + ImportStatus.details.DataWarningCount))"/>
                      <key-binding alias="Result" key="Result"/>
                    </pipelet-node>
                    <node-display orientation="horizontal" x="1" y="0"/>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="1" y="0"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="&quot;data_error_warning&quot;" key="From_0"/>
                      <key-binding alias="EmailFlow" key="To_0"/>
                      <key-binding alias="true" key="From_1"/>
                      <key-binding alias="InstanceReqd" key="To_1"/>
                      <key-binding alias="new dw.util.HashMap()" key="From_2"/>
                      <key-binding alias="MailParams" key="To_2"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="null" key="From_4"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="null" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                    </pipelet-node>
                    <node-display orientation="horizontal" x="1" y="0"/>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="1" y="0"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="null" key="From_0"/>
                      <key-binding alias="null" key="To_0"/>
                      <key-binding alias="null" key="From_1"/>
                      <key-binding alias="null" key="To_1"/>
                      <key-binding alias="null" key="From_2"/>
                      <key-binding alias="null" key="To_2"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="MailParams.put(&quot;ErrorMessage&quot;,&quot;List of data errors or warnings listed in log file name as https://&quot;+dw.system.System.getInstanceHostname()+&quot;/on/demandware.servlet/webdav/Sites/Impex/log/&quot;+ImportStatus.details.LogFileName)" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="MailParams.put(&quot;SiteId&quot;,dw.system.Site.getCurrent().ID)" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="MailParams.put(&quot;RemoteURL&quot;, Task.getParameter('remoteFolderUrl'))" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="MailParams.put(&quot;JobConfigurationId&quot;,JobConfigID)" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                      <key-binding alias="MailParams.put(&quot;RemoteFile&quot;,RemoteFile)" key="From_6"/>
                    </pipelet-node>
                    <node-display orientation="horizontal" x="1" y="0"/>
                  </node>
                  <transition target-connector="in1" target-path="../../b2.3"/>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
              </transition-display>
            </simple-transition>
            <node>
              <decision-node condition-key="ErrorType==null" condition-operator="expr"/>
              <node-display orientation="horizontal" x="1" y="0"/>
              <branch basename="b3" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="1" y="0"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <pipelet-node custom-name="Task.setStatusMessage()" pipelet-name="Eval" pipelet-set-identifier="bc_api">
                      <config-property key="OnError" value="null"/>
                      <config-property key="Transactional" value="true"/>
                      <config-property key="Expression" value="Task.setStatusMessage((&quot;Order Imported successfully&quot;))"/>
                      <key-binding alias="Result" key="Result"/>
                    </pipelet-node>
                    <node-display orientation="horizontal" x="1" y="0"/>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="1" y="0"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <end-node/>
                    <node-display orientation="horizontal" x="1" y="0"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="FEEDERROR"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_8">
    <segment>
      <node>
        <text-node>
          <description>The Stop node makes the job show as ERROR in BM. Standard job notification for ERRORs can be used.</description>
        </text-node>
        <node-display x="9" y="3"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_9">
    <segment>
      <node>
        <text-node>
          <description>This task can be used to export orders.
Example configuration:
{
    &quot;name&quot;: &quot;Export Orders&quot;,
    &quot;pipeline&quot;: &quot;FeedSteps-ExportOrders&quot;,
    &quot;remotePassword&quot;: &quot;MyPassword&quot;,
    &quot;remoteLogin&quot;: &quot;MyLogin&quot;,
    &quot;remoteFolderUrl&quot;: &quot;sftp://myuploadserver.com/tmp/&quot;,
    &quot;filePrefix&quot;: &quot;OrderExport_MHEUK&quot;,
    &quot;tempFolder&quot;: &quot;order&quot;
}</description>
        </text-node>
        <node-display width="3" x="16" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="ExportOrders">
    <segment>
      <node>
        <start-node call-mode="private" name="ExportOrders" secure="false"/>
        <node-display orientation="horizontal" x="16" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="dw.web.Resource.msg(&quot;global.missingSAPCustomerFlag&quot;,&quot;locale&quot;,null).equals(&quot;true&quot;)" condition-operator="expr"/>
        <node-display orientation="horizontal" x="1" y="0"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="SearchSystemObject" pipelet-set-identifier="bc_api">
                <config-property key="ObjectType" value="Order"/>
                <config-property key="CaseSensitive" value="false"/>
                <config-property key="SearchExpression" value="exportStatus={1} AND custom.sapCustomerId!={2} AND status!={3}"/>
                <key-binding alias="Orders" key="SearchResult"/>
                <key-binding alias="OrderCount" key="SearchResultCount"/>
                <key-binding alias="null" key="Search1Key"/>
                <key-binding alias="dw.order.Order.EXPORT_STATUS_READY" key="Search1Value"/>
                <key-binding alias="null" key="Search2Key"/>
                <key-binding alias="dw.order.Order.ORDER_STATUS_CANCELLED" key="Search3Value"/>
                <key-binding alias="null" key="Search4Key"/>
                <key-binding alias="null" key="Search4Value"/>
                <key-binding alias="null" key="Search5Key"/>
                <key-binding alias="null" key="Search5Value"/>
                <key-binding alias="&quot;orderNo&quot;" key="SortBy1"/>
                <key-binding alias="1" key="SortBy1Direction"/>
                <key-binding alias="null" key="SortBy2"/>
                <key-binding alias="null" key="SortBy2Direction"/>
                <key-binding alias="null" key="SortBy3"/>
                <key-binding alias="null" key="SortBy3Direction"/>
                <key-binding alias="empty" key="Search2Value"/>
              </pipelet-node>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../+1">
              <transition-display>
                <bend-point relative-to="target" x="2" y="0"/>
              </transition-display>
            </transition>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="SearchSystemObject" pipelet-set-identifier="bc_api">
          <config-property key="ObjectType" value="Order"/>
          <config-property key="CaseSensitive" value="false"/>
          <config-property key="SearchExpression" value="exportStatus={1}AND status!={2}"/>
          <key-binding alias="Orders" key="SearchResult"/>
          <key-binding alias="OrderCount" key="SearchResultCount"/>
          <key-binding alias="null" key="Search1Key"/>
          <key-binding alias="dw.order.Order.EXPORT_STATUS_READY" key="Search1Value"/>
          <key-binding alias="null" key="Search2Key"/>
          <key-binding alias="null" key="Search3Key"/>
          <key-binding alias="null" key="Search3Value"/>
          <key-binding alias="null" key="Search4Key"/>
          <key-binding alias="null" key="Search4Value"/>
          <key-binding alias="null" key="Search5Key"/>
          <key-binding alias="null" key="Search5Value"/>
          <key-binding alias="&quot;orderNo&quot;" key="SortBy1"/>
          <key-binding alias="1" key="SortBy1Direction"/>
          <key-binding alias="null" key="SortBy2"/>
          <key-binding alias="null" key="SortBy2Direction"/>
          <key-binding alias="null" key="SortBy3"/>
          <key-binding alias="null" key="SortBy3Direction"/>
          <key-binding alias="dw.order.Order.ORDER_STATUS_CANCELLED" key="Search2Value"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in2" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="Orders.asList()" key="From_0"/>
          <key-binding alias="OrdersList" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="OrderCount!=0" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="feeds/GenerateFilenames.ds"/>
                <key-binding alias="ScriptLog" key="ScriptLog"/>
                <key-binding alias="File" key="File"/>
                <key-binding alias="RemoteFile" key="RemoteFile"/>
                <key-binding alias="Task.getParameter('filePrefix')" key="FilePrefix"/>
                <key-binding alias="Task.getParameter('tempFolder')" key="TempFolder"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="target" x="-1" y="2"/>
                    <bend-point relative-to="target" x="-1" y="0"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <pipelet-node custom-name="Task.setErrorStatusMessage()" pipelet-name="Eval" pipelet-set-identifier="bc_api">
                      <config-property key="OnError" value="null"/>
                      <config-property key="Transactional" value="true"/>
                      <config-property key="Expression" value="Task.setErrorStatusMessage(&quot;Order Export FileName Generation failed &quot;)"/>
                      <key-binding alias="Result" key="Result"/>
                    </pipelet-node>
                    <node-display orientation="horizontal" x="2" y="-1"/>
                  </node>
                  <simple-transition/>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="&quot;Order Export FileName Generation failed. Refer attached log for more detail &quot;" key="From_0"/>
                      <key-binding alias="ErrorMessage" key="To_0"/>
                      <key-binding alias="null" key="From_1"/>
                      <key-binding alias="null" key="To_1"/>
                      <key-binding alias="null" key="From_2"/>
                      <key-binding alias="null" key="To_2"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="null" key="From_4"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="null" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                    </pipelet-node>
                    <node-display orientation="horizontal" x="1" y="0"/>
                  </node>
                  <transition target-connector="in1" target-path="../b3.1/b2.2">
                    <transition-display>
                      <bend-point relative-to="source" x="4" y="0"/>
                    </transition-display>
                  </transition>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node custom-name="Task.setStatusMessage(&quot;Exporting orders  to file &quot; + File)" pipelet-name="Eval" pipelet-set-identifier="bc_api">
                <config-property key="OnError" value="null"/>
                <config-property key="Transactional" value="true"/>
                <config-property key="Expression" value="Task.setStatusMessage(&quot;Exporting orders to file &quot; + File)"/>
                <key-binding alias="Result" key="Result"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="ExportOrders" pipelet-set-identifier="bc_api">
                <key-binding alias="File" key="ExportFile"/>
                <key-binding alias="null" key="OverwriteExportFile"/>
                <key-binding alias="null" key="ErrorCode"/>
                <key-binding alias="ErrorMessage" key="ErrorMsg"/>
                <key-binding alias="LogFileName" key="LogFileName"/>
                <key-binding alias="null" key="EncryptionAlgorithm"/>
                <key-binding alias="null" key="EncryptionKey"/>
                <key-binding alias="ExportStatus" key="Status"/>
                <key-binding alias="OrdersList.iterator()" key="Orders"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b3" source-connector="error">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="1" y="0"/>
                    <bend-point relative-to="target" x="-1" y="0"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <pipelet-node custom-name="Task.setErrorStatusMessage()" pipelet-name="Eval" pipelet-set-identifier="bc_api">
                      <config-property key="OnError" value="null"/>
                      <config-property key="Transactional" value="true"/>
                      <config-property key="Expression" value="Task.setErrorStatusMessage(&quot;Export Order pipelet failed. ErrorMessage: &quot; + ErrorMessage + &quot;Please find details in LogFile: https://&quot;+System.getInstanceHostname()+&quot;/on/demandware.servlet/webdav/Sites/Impex/log/&quot; + LogFileName)"/>
                      <key-binding alias="Result" key="Result"/>
                    </pipelet-node>
                    <node-display orientation="horizontal" x="1" y="-1"/>
                  </node>
                  <simple-transition/>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="&quot;Export Order pipelet failed. Please find details in LogFile: https://&quot;+dw.system.System.getInstanceHostname()+&quot;/on/demandware.servlet/webdav/Sites/Impex/log/&quot; + LogFileName" key="From_0"/>
                      <key-binding alias="ErrorMessage" key="To_0"/>
                      <key-binding alias="null" key="From_1"/>
                      <key-binding alias="null" key="To_1"/>
                      <key-binding alias="null" key="From_2"/>
                      <key-binding alias="null" key="To_2"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="null" key="From_4"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="null" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                    </pipelet-node>
                    <node-display orientation="horizontal" x="1" y="0"/>
                  </node>
                  <simple-transition/>
                  <node>
                    <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="true"/>
                      <config-property key="OnError" value="PIPELET_ERROR"/>
                      <config-property key="ScriptFile" value="feeds/UpdateExportStatusReady.ds"/>
                      <config-property key="Timeout" value="3600"/>
                      <key-binding alias="null" key="ScriptLog"/>
                      <key-binding alias="OrderIterator" key="Orders"/>
                      <key-binding alias="Orders" key="OrderIterator"/>
                      <key-binding alias="OrdersList.iterator()" key="OrdersList"/>
                      <key-binding alias="OrderList" key="OrderasAList"/>
                    </pipelet-node>
                    <node-display x="1" y="1"/>
                    <branch basename="b2" source-connector="error">
                      <transition target-connector="in">
                        <transition-display>
                          <bend-point relative-to="source" x="1" y="0"/>
                        </transition-display>
                      </transition>
                      <segment>
                        <node>
                          <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                            <config-property key="Transactional" value="false"/>
                            <key-binding alias="ErrorMessage + &quot; Unable to update order status to READY state&quot;" key="From_0"/>
                            <key-binding alias="ErrorMessage" key="To_0"/>
                            <key-binding alias="null" key="From_1"/>
                            <key-binding alias="null" key="To_1"/>
                            <key-binding alias="null" key="From_2"/>
                            <key-binding alias="null" key="To_2"/>
                            <key-binding alias="null" key="From_3"/>
                            <key-binding alias="null" key="To_3"/>
                            <key-binding alias="null" key="From_4"/>
                            <key-binding alias="null" key="To_4"/>
                            <key-binding alias="null" key="From_5"/>
                            <key-binding alias="null" key="To_5"/>
                            <key-binding alias="null" key="From_6"/>
                            <key-binding alias="null" key="To_6"/>
                            <key-binding alias="null" key="From_7"/>
                            <key-binding alias="null" key="To_7"/>
                            <key-binding alias="null" key="From_8"/>
                            <key-binding alias="null" key="To_8"/>
                            <key-binding alias="null" key="From_9"/>
                            <key-binding alias="null" key="To_9"/>
                          </pipelet-node>
                          <node-display orientation="horizontal" x="1" y="0"/>
                        </node>
                        <transition target-connector="in2" target-path="./+1"/>
                      </segment>
                      <segment>
                        <node>
                          <join-node/>
                          <node-display x="1" y="0"/>
                        </node>
                        <transition target-connector="in1" target-path="../../+2"/>
                      </segment>
                    </branch>
                  </node>
                  <transition target-connector="in1" target-path="../+1"/>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <decision-node condition-key="ExportStatus.code=='IMPEX-0'" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b4" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="0" y="1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <call-node start-name-ref="FeedSteps-UploadFeed"/>
                    <node-display x="0" y="1"/>
                    <branch basename="b2" source-connector="FAILED">
                      <transition target-connector="in">
                        <transition-display>
                          <bend-point relative-to="source" x="1" y="0"/>
                        </transition-display>
                      </transition>
                      <segment>
                        <node>
                          <pipelet-node custom-name="Task.setErrorStatusMessage()" pipelet-name="Eval" pipelet-set-identifier="bc_api">
                            <config-property key="OnError" value="null"/>
                            <config-property key="Transactional" value="true"/>
                            <config-property key="Expression" value="Task.setErrorStatusMessage(&quot;Upload Feed Failed. ErrorMessage: &quot; + ErrorMessage)"/>
                            <key-binding alias="Result" key="Result"/>
                          </pipelet-node>
                          <node-display orientation="horizontal" x="1" y="0"/>
                        </node>
                        <simple-transition>
                          <transition-display>
                            <bend-point relative-to="source" x="1" y="0"/>
                          </transition-display>
                        </simple-transition>
                        <node>
                          <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                            <config-property key="Transactional" value="true"/>
                            <config-property key="OnError" value="PIPELET_ERROR"/>
                            <config-property key="ScriptFile" value="feeds/UpdateExportStatusReady.ds"/>
                            <key-binding alias="null" key="ScriptLog"/>
                            <key-binding alias="Orders" key="Orders"/>
                            <key-binding alias="OrdersList.iterator()" key="OrdersList"/>
                            <key-binding alias="OrderList" key="OrderasAList"/>
                          </pipelet-node>
                          <node-display orientation="horizontal" x="1" y="0"/>
                          <branch basename="b2" source-connector="error">
                            <transition target-connector="in">
                              <transition-display>
                                <bend-point relative-to="source" x="0" y="1"/>
                              </transition-display>
                            </transition>
                            <segment>
                              <node>
                                <pipelet-node custom-name="Task.setErrorStatusMessage()" pipelet-name="Eval" pipelet-set-identifier="bc_api">
                                  <config-property key="OnError" value="null"/>
                                  <config-property key="Transactional" value="true"/>
                                  <config-property key="Expression" value="Task.setErrorStatusMessage(&quot;Updating Export Status to Ready State Failed&quot;)"/>
                                  <key-binding alias="Result" key="Result"/>
                                </pipelet-node>
                                <node-display x="0" y="1"/>
                              </node>
                              <simple-transition>
                                <transition-display>
                                  <bend-point relative-to="source" x="0" y="1"/>
                                </transition-display>
                              </simple-transition>
                              <node>
                                <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                                  <config-property key="Transactional" value="false"/>
                                  <key-binding alias="&quot;Updating Export Status to Ready State Failed  &quot;+ ErrorMessage" key="From_0"/>
                                  <key-binding alias="ErrorMessage" key="To_0"/>
                                  <key-binding alias="null" key="To_1"/>
                                  <key-binding alias="null" key="From_2"/>
                                  <key-binding alias="null" key="To_2"/>
                                  <key-binding alias="null" key="From_3"/>
                                  <key-binding alias="null" key="To_3"/>
                                  <key-binding alias="null" key="From_4"/>
                                  <key-binding alias="null" key="To_4"/>
                                  <key-binding alias="null" key="From_5"/>
                                  <key-binding alias="null" key="To_5"/>
                                  <key-binding alias="null" key="From_6"/>
                                  <key-binding alias="null" key="To_6"/>
                                  <key-binding alias="null" key="From_7"/>
                                  <key-binding alias="null" key="To_7"/>
                                  <key-binding alias="null" key="From_8"/>
                                  <key-binding alias="null" key="To_8"/>
                                  <key-binding alias="MailParams.put(&quot;ErrorMessage&quot;, ErrorMessage)" key="From_9"/>
                                  <key-binding alias="null" key="To_9"/>
                                </pipelet-node>
                                <node-display x="0" y="1"/>
                              </node>
                              <transition target-connector="in1" target-path="./+1"/>
                            </segment>
                            <segment>
                              <node>
                                <join-node/>
                                <node-display x="0" y="1"/>
                              </node>
                              <transition target-connector="in1" target-path="../b3.1"/>
                            </segment>
                          </branch>
                        </node>
                        <simple-transition>
                          <transition-display>
                            <bend-point relative-to="source" x="1" y="0"/>
                          </transition-display>
                        </simple-transition>
                        <node>
                          <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                            <config-property key="Transactional" value="false"/>
                            <config-property key="OnError" value="PIPELET_ERROR"/>
                            <config-property key="ScriptFile" value="feeds/ArchiveFeed.ds"/>
                            <key-binding alias="ScriptLog" key="ScriptLog"/>
                            <key-binding alias="Task.getParameter('filePrefix')" key="FilePrefix"/>
                            <key-binding alias="Task.getParameter('tempFolder')" key="TempFolder"/>
                            <key-binding alias="RemoteFile" key="RemoteFile"/>
                            <key-binding alias="Order.orderNo" key="OrderNo"/>
                            <key-binding alias="Task.getParameter('archiveFailure', 'archive')" key="ArchiveFolder"/>
                            <key-binding alias="File" key="File"/>
                          </pipelet-node>
                          <node-display orientation="horizontal" x="1" y="0"/>
                          <branch basename="b3" source-connector="error">
                            <transition target-connector="in3"/>
                            <segment>
                              <node>
                                <join-node/>
                                <node-display x="0" y="3"/>
                              </node>
                              <simple-transition/>
                              <node>
                                <end-node name="FAILED"/>
                                <node-display orientation="horizontal" x="1" y="0"/>
                              </node>
                            </segment>
                          </branch>
                        </node>
                        <simple-transition>
                          <transition-display>
                            <bend-point relative-to="source" x="1" y="0"/>
                          </transition-display>
                        </simple-transition>
                        <node>
                          <end-node name="FAILED"/>
                          <node-display orientation="horizontal" x="1" y="0"/>
                        </node>
                      </segment>
                    </branch>
                    <branch basename="b3" source-connector="SUCCESS">
                      <transition target-connector="in">
                        <transition-display>
                          <bend-point relative-to="source" x="0" y="1"/>
                        </transition-display>
                      </transition>
                      <segment>
                        <node>
                          <call-node start-name-ref="FeedSteps-ArchiveFeed"/>
                          <node-display x="0" y="1"/>
                          <branch basename="b2" source-connector="FAILED">
                            <transition target-connector="in">
                              <transition-display>
                                <bend-point relative-to="target" x="-1" y="0"/>
                              </transition-display>
                            </transition>
                            <segment>
                              <node>
                                <pipelet-node custom-name="Task.setErrorStatusMessage()" pipelet-name="Eval" pipelet-set-identifier="bc_api">
                                  <config-property key="OnError" value="null"/>
                                  <config-property key="Transactional" value="true"/>
                                  <config-property key="Expression" value="Task.setErrorStatusMessage(&quot;Archive Feed Failed. ErrorMessage: &quot; + ErrorMessage + &quot;Please find details in LogFile: &quot; + LogFileName)"/>
                                  <key-binding alias="Result" key="Result"/>
                                </pipelet-node>
                                <node-display orientation="horizontal" x="1" y="2"/>
                              </node>
                              <transition target-connector="in1" target-path="../../b2.1/b2.2"/>
                            </segment>
                          </branch>
                        </node>
                        <simple-transition/>
                        <node>
                          <end-node/>
                          <node-display x="0" y="3"/>
                        </node>
                      </segment>
                    </branch>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node custom-name="Task.setErrorStatusMessage()" pipelet-name="Eval" pipelet-set-identifier="bc_api">
                <config-property key="OnError" value="null"/>
                <config-property key="Transactional" value="true"/>
                <config-property key="Expression" value="Task.setErrorStatusMessage(&quot;Order Export failed. The status code of Import is not IMPEX-0. Refer demandware logs for more detail&quot;)"/>
                <key-binding alias="Result" key="Result"/>
              </pipelet-node>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="&quot;Order Export failed. The status code of Import is not IMPEX-0. Refer demandware logs for more detail&quot;" key="From_0"/>
                <key-binding alias="ErrorMessage" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="2" y="0"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="EmailFlow" key="To_0"/>
                <key-binding alias="InstanceReqd" key="To_1"/>
                <key-binding alias="MailParams" key="To_2"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
                <key-binding alias="true" key="From_1"/>
                <key-binding alias="&quot;order_export_error&quot;" key="From_0"/>
                <key-binding alias="new dw.util.HashMap()" key="From_2"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="null" key="From_0"/>
                <key-binding alias="null" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="MailParams.put(&quot;ErrorMessage&quot;, ErrorMessage)" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="MailParams.put(&quot;SiteId&quot;,dw.system.Site.getCurrent().ID)" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="MailParams.put(&quot;RemoteURL&quot;, Task.getParameter('remoteFolderUrl'))" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="MailParams.put(&quot;JobConfigurationId&quot;,JobConfigID)" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
                <key-binding alias="MailParams.put(&quot;RemoteFile&quot;, File)" key="From_6"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <end-node name="FAILED"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="SUCCESS"/>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_11">
    <segment>
      <node>
        <text-node>
          <description>Find orders that are EXPORT_STATUS_READY 
It returns an iterartor of Orders</description>
        </text-node>
        <node-display x="16" y="2"/>
      </node>
    </segment>
  </branch>
  <branch basename="ArchiveFailureFeed">
    <segment>
      <node>
        <start-node call-mode="private" name="ArchiveFailureFeed" secure="false"/>
        <node-display x="20" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="feeds/ArchiveFeed.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="Task.getParameter('archiveFolder')" key="LocalArchiveFolder"/>
          <key-binding alias="LocalFile" key="LocalFile"/>
          <key-binding alias="File" key="File"/>
          <key-binding alias="Task.getParameter('archiveFailure', 'archive')" key="ArchiveFolder"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="FAILED"/>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node custom-name="Task.setStatusMessage(&quot;Validation failed and import failed file archived successfully.&quot;)" pipelet-name="Eval" pipelet-set-identifier="bc_api">
          <config-property key="OnError" value="null"/>
          <config-property key="Transactional" value="true"/>
          <config-property key="Expression" value="Task.setStatusMessage(&quot;Validation failed and import failed file archived successfully.&quot;)"/>
          <key-binding alias="Result" key="Result"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_13">
    <segment>
      <node>
        <text-node>
          <description>We archive and delete the file if an import error occurs, in order to avoid that the import runs again.
If an error occurs, we don't log anything.</description>
        </text-node>
        <node-display width="2" x="24" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="HandleImportError">
    <segment>
      <node>
        <start-node call-mode="private" name="HandleImportError" secure="false"/>
        <node-display x="24" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node custom-name="Task.setStatusMessage(&quot;Import Error: Archiving file &quot; + File)" pipelet-name="Eval" pipelet-set-identifier="bc_api">
          <config-property key="OnError" value="null"/>
          <config-property key="Transactional" value="true"/>
          <config-property key="Expression" value="Task.setStatusMessage(&quot;Import Error: Archiving file &quot; + File)"/>
          <key-binding alias="Result" key="Result"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="FeedSteps-ArchiveFeed"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="Task.setStatusMessage(&quot;Import Error: Deleting file &quot; + File + &quot; on remote location.&quot;)" pipelet-name="Eval" pipelet-set-identifier="bc_api">
          <config-property key="OnError" value="null"/>
          <config-property key="Transactional" value="true"/>
          <config-property key="Expression" value="Task.setStatusMessage(&quot;Import Error: Deleting file &quot; + File + &quot; on remote location.&quot;)"/>
          <key-binding alias="Result" key="Result"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="FeedSteps-DeleteFeed"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="UploadAndArchiveFeed">
    <segment>
      <node>
        <start-node call-mode="private" name="UploadAndArchiveFeed" secure="false"/>
        <node-display x="27" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="FeedSteps-UploadFeed"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="ERROR">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="2"/>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <end-node name="FAILED"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
        <branch basename="b3" source-connector="FAILED">
          <transition target-connector="in1" target-path="./b2.1">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-2"/>
            </transition-display>
          </transition>
        </branch>
        <branch basename="b4" source-connector="SUCCESS">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <call-node start-name-ref="FeedSteps-ArchiveFeed"/>
              <node-display x="0" y="2"/>
              <branch basename="b2" source-connector="FAILED">
                <transition target-connector="in2" target-path="../b2.2"/>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <end-node/>
              <node-display x="0" y="2"/>
            </node>
          </segment>
        </branch>
      </node>
    </segment>
  </branch>
  <branch basename="EmptyHook">
    <segment>
      <node>
        <start-node call-mode="private" name="EmptyHook" secure="false"/>
        <node-display x="30" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <placeholder-node proposed-pipelet-name="Do Nothing"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="FAILED"/>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_17">
    <segment>
      <node>
        <text-node>
          <description>Generates File in OrderExport_MHEUK_YYYY-MM-DD-HH-MM-SS.xml format</description>
        </text-node>
        <node-display x="16" y="5"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_18">
    <segment>
      <node>
        <text-node>
          <description>Exports the orders</description>
        </text-node>
        <node-display x="16" y="7"/>
      </node>
    </segment>
  </branch>
  <branch basename="ArchiveFeed">
    <segment>
      <node>
        <start-node call-mode="private" name="ArchiveFeed" secure="false"/>
        <node-display x="24" y="7"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="feeds/ArchiveFeed.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="Task.getParameter('archiveFolder')" key="LocalArchiveFolder"/>
          <key-binding alias="LocalFile" key="LocalFile"/>
          <key-binding alias="File" key="File"/>
          <key-binding alias="Task.getParameter('archiveSuccess', 'archive')" key="ArchiveFolder"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-2"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="&quot;archive_error&quot;" key="From_0"/>
                <key-binding alias="EmailFlow" key="To_0"/>
                <key-binding alias="true" key="From_1"/>
                <key-binding alias="InstanceReqd" key="To_1"/>
                <key-binding alias="new dw.util.HashMap()" key="From_2"/>
                <key-binding alias="MailParams" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="2" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="null" key="From_0"/>
                <key-binding alias="null" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="MailParams.put(&quot;ErrorMessage&quot;,&quot;Feed file archive failed&quot;)" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="MailParams.put(&quot;archive-location&quot;,Task.getParameter('archiveFolder', 'archive'))" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="MailParams.put(&quot;SiteId&quot;,dw.system.Site.getCurrent().ID)" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="MailParams.put(&quot;RemoteURL&quot;, Task.getParameter('remoteFolderUrl'))" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="MailParams.put(&quot;JobConfigurationId&quot;,JobConfigID)" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
                <key-binding alias="MailParams.put(&quot;RemoteFile&quot;,RemoteFile )" key="From_6"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="FAILED"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="Task.getParameter('impexType')==&quot;inventorylists&quot;" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="feeds/ArchiveFeed.ds"/>
                <key-binding alias="ScriptLog" key="ScriptLog"/>
                <key-binding alias="Task.getParameter('archiveSuccess', 'archive')" key="ArchiveFolder"/>
                <key-binding alias="CustomFile" key="File"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="&quot;archive_error&quot;" key="From_0"/>
                      <key-binding alias="EmailFlow" key="To_0"/>
                      <key-binding alias="true" key="From_1"/>
                      <key-binding alias="InstanceReqd" key="To_1"/>
                      <key-binding alias="new dw.util.HashMap()" key="From_2"/>
                      <key-binding alias="MailParams" key="To_2"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="null" key="From_4"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="null" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                    </pipelet-node>
                    <node-display x="1" y="1"/>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="1"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="null" key="From_0"/>
                      <key-binding alias="null" key="To_0"/>
                      <key-binding alias="null" key="From_1"/>
                      <key-binding alias="null" key="To_1"/>
                      <key-binding alias="null" key="From_2"/>
                      <key-binding alias="null" key="To_2"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="MailParams.put(&quot;ErrorMessage&quot;,&quot;Feed file archive failed&quot;)" key="From_4"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="MailParams.put(&quot;archive-location&quot;,Task.getParameter('archiveFolder', 'archive'))" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="MailParams.put(&quot;SiteId&quot;,dw.system.Site.getCurrent().ID)" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="MailParams.put(&quot;RemoteURL&quot;, Task.getParameter('remoteFolderUrl'))" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="MailParams.put(&quot;JobConfigurationId&quot;,JobConfigID)" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                      <key-binding alias="MailParams.put(&quot;RemoteFile&quot;,CustomFile )" key="From_6"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="1"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <end-node name="FAILED"/>
                    <node-display x="0" y="1"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <end-node/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="RunTypeSpecificImport">
    <segment>
      <node>
        <start-node call-mode="private" name="RunTypeSpecificImport" secure="false"/>
        <node-display x="11" y="11"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="get ImportStartTime" pipelet-name="Eval" pipelet-set-identifier="bc_api">
          <config-property key="OnError" value="null"/>
          <config-property key="Transactional" value="false"/>
          <config-property key="Expression" value="new Date().getTime()"/>
          <key-binding alias="ImportStartTime" key="Result"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="Task.getParameter('impexType')!='orderstatus'" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <decision-node condition-key="Task.getParameter('impexType')!=&quot;inventorylists&quot;" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <decision-node condition-key="Task.getParameter('impexType')!='activedata'" condition-operator="expr"/>
                    <node-display x="0" y="1"/>
                    <branch basename="b2" source-connector="yes">
                      <transition target-connector="in"/>
                      <segment>
                        <node>
                          <decision-node condition-key="Task.getParameter('impexType')!='catalog'" condition-operator="expr"/>
                          <node-display x="0" y="1"/>
                          <branch basename="b2" source-connector="yes">
                            <transition target-connector="in"/>
                            <segment>
                              <node>
                                <decision-node condition-key="Task.getParameter('impexType')!='content'" condition-operator="expr"/>
                                <node-display x="0" y="1"/>
                                <branch basename="b2" source-connector="yes">
                                  <transition target-connector="in"/>
                                  <segment>
                                    <node>
                                      <decision-node condition-key="Task.getParameter('impexType')!='coupons'" condition-operator="expr"/>
                                      <node-display x="0" y="1"/>
                                      <branch basename="b2" source-connector="yes">
                                        <transition target-connector="in"/>
                                        <segment>
                                          <node>
                                            <decision-node condition-key="Task.getParameter('impexType')!='customobjects'" condition-operator="expr"/>
                                            <node-display x="0" y="1"/>
                                            <branch basename="b2" source-connector="yes">
                                              <transition target-connector="in"/>
                                              <segment>
                                                <node>
                                                  <decision-node condition-key="Task.getParameter('impexType')!='customers'" condition-operator="expr"/>
                                                  <node-display x="0" y="1"/>
                                                  <branch basename="b2" source-connector="yes">
                                                    <transition target-connector="in"/>
                                                    <segment>
                                                      <node>
                                                        <decision-node condition-key="Task.getParameter('impexType')!='giftcertificates'" condition-operator="expr"/>
                                                        <node-display x="0" y="1"/>
                                                        <branch basename="b2" source-connector="yes">
                                                          <transition target-connector="in">
                                                            <transition-display>
                                                              <bend-point relative-to="source" x="0" y="1"/>
                                                            </transition-display>
                                                          </transition>
                                                          <segment>
                                                            <node>
                                                              <decision-node condition-key="Task.getParameter('impexType')!=&quot;pricebooks&quot;" condition-operator="expr"/>
                                                              <node-display x="0" y="1"/>
                                                              <branch basename="b2" source-connector="yes">
                                                                <transition target-connector="in"/>
                                                                <segment>
                                                                  <node>
                                                                    <decision-node condition-key="Task.getParameter('impexType')!=&quot;promotions&quot;" condition-operator="expr"/>
                                                                    <node-display x="0" y="1"/>
                                                                    <branch basename="b2" source-connector="yes">
                                                                      <transition target-connector="in"/>
                                                                      <segment>
                                                                        <node>
                                                                          <decision-node condition-key="Task.getParameter('impexType')!='shippingmethods'" condition-operator="expr"/>
                                                                          <node-display x="0" y="1"/>
                                                                          <branch basename="b2" source-connector="yes">
                                                                            <transition target-connector="in"/>
                                                                            <segment>
                                                                              <node>
                                                                                <decision-node condition-key="Task.getParameter('impexType')!='slots'" condition-operator="expr"/>
                                                                                <node-display x="0" y="1"/>
                                                                                <branch basename="b2" source-connector="yes">
                                                                                  <transition target-connector="in"/>
                                                                                  <segment>
                                                                                    <node>
                                                                                      <decision-node condition-key="Task.getParameter('impexType')!='sourcecodes'" condition-operator="expr"/>
                                                                                      <node-display x="0" y="1"/>
                                                                                      <branch basename="b2" source-connector="yes">
                                                                                        <transition target-connector="in">
                                                                                          <transition-display>
                                                                                            <bend-point relative-to="source" x="0" y="1"/>
                                                                                          </transition-display>
                                                                                        </transition>
                                                                                        <segment>
                                                                                          <node>
                                                                                            <decision-node condition-key="Task.getParameter('impexType')!='stores'" condition-operator="expr"/>
                                                                                            <node-display x="0" y="1"/>
                                                                                            <branch basename="b2" source-connector="yes">
                                                                                              <transition target-connector="in">
                                                                                                <transition-display>
                                                                                                  <bend-point relative-to="source" x="0" y="1"/>
                                                                                                </transition-display>
                                                                                              </transition>
                                                                                              <segment>
                                                                                                <node>
                                                                                                  <decision-node condition-key="Task.getParameter('impexType')!='taxtable'" condition-operator="expr"/>
                                                                                                  <node-display x="0" y="1"/>
                                                                                                  <branch basename="b2" source-connector="yes">
                                                                                                    <transition target-connector="in">
                                                                                                      <transition-display>
                                                                                                        <bend-point relative-to="source" x="0" y="1"/>
                                                                                                      </transition-display>
                                                                                                    </transition>
                                                                                                    <segment>
                                                                                                      <node>
                                                                                                        <end-node name="FAILED"/>
                                                                                                        <node-display x="0" y="1"/>
                                                                                                      </node>
                                                                                                    </segment>
                                                                                                  </branch>
                                                                                                </node>
                                                                                                <simple-transition>
                                                                                                  <transition-display>
                                                                                                    <bend-point relative-to="source" x="1" y="0"/>
                                                                                                  </transition-display>
                                                                                                </simple-transition>
                                                                                                <node>
                                                                                                  <pipelet-node pipelet-name="ImportTaxTable" pipelet-set-identifier="bc_api">
                                                                                                    <key-binding alias="File" key="ImportFile"/>
                                                                                                    <key-binding alias="Task.getParameter('importMode', 'MERGE')" key="ImportMode"/>
                                                                                                    <key-binding alias="null" key="ErrorCode"/>
                                                                                                    <key-binding alias="null" key="ErrorMsg"/>
                                                                                                    <key-binding alias="null" key="LogFileName"/>
                                                                                                    <key-binding alias="ImportStatus" key="Status"/>
                                                                                                  </pipelet-node>
                                                                                                  <node-display orientation="horizontal" x="1" y="0"/>
                                                                                                  <branch basename="b3" source-connector="error">
                                                                                                    <transition target-connector="in2" target-path="../../../../../../../../../../../../../../b3.15">
                                                                                                      <transition-display>
                                                                                                        <bend-point relative-to="source" x="0" y="1"/>
                                                                                                        <bend-point relative-to="source" x="2" y="1"/>
                                                                                                        <bend-point relative-to="target" x="-1" y="-1"/>
                                                                                                      </transition-display>
                                                                                                    </transition>
                                                                                                  </branch>
                                                                                                </node>
                                                                                                <transition target-connector="in2" target-path="../../../../../../../../../../../../../../../+15"/>
                                                                                              </segment>
                                                                                            </branch>
                                                                                          </node>
                                                                                          <simple-transition>
                                                                                            <transition-display>
                                                                                              <bend-point relative-to="source" x="1" y="0"/>
                                                                                            </transition-display>
                                                                                          </simple-transition>
                                                                                          <node>
                                                                                            <pipelet-node pipelet-name="ImportStores" pipelet-set-identifier="bc_api">
                                                                                              <key-binding alias="File" key="ImportFile"/>
                                                                                              <key-binding alias="Task.getParameter('importMode', 'MERGE')" key="ImportMode"/>
                                                                                              <key-binding alias="null" key="ErrorCode"/>
                                                                                              <key-binding alias="null" key="ErrorMsg"/>
                                                                                              <key-binding alias="null" key="LogFileName"/>
                                                                                              <key-binding alias="ImportStatus" key="Status"/>
                                                                                            </pipelet-node>
                                                                                            <node-display orientation="horizontal" x="1" y="0"/>
                                                                                            <branch basename="b3" source-connector="error">
                                                                                              <transition target-connector="in2" target-path="../../../../../../../../../../../../../b3.14">
                                                                                                <transition-display>
                                                                                                  <bend-point relative-to="source" x="0" y="1"/>
                                                                                                  <bend-point relative-to="target" x="-1" y="-1"/>
                                                                                                </transition-display>
                                                                                              </transition>
                                                                                            </branch>
                                                                                          </node>
                                                                                          <transition target-connector="in2" target-path="../../../../../../../../../../../../../../+14"/>
                                                                                        </segment>
                                                                                      </branch>
                                                                                    </node>
                                                                                    <simple-transition>
                                                                                      <transition-display>
                                                                                        <bend-point relative-to="source" x="1" y="0"/>
                                                                                      </transition-display>
                                                                                    </simple-transition>
                                                                                    <node>
                                                                                      <pipelet-node pipelet-name="ImportSourceCodes" pipelet-set-identifier="bc_api">
                                                                                        <key-binding alias="File" key="ImportFile"/>
                                                                                        <key-binding alias="Task.getParameter('importMode', 'MERGE')" key="ImportMode"/>
                                                                                        <key-binding alias="null" key="ErrorCode"/>
                                                                                        <key-binding alias="null" key="ErrorMsg"/>
                                                                                        <key-binding alias="null" key="LogFileName"/>
                                                                                        <key-binding alias="ImportStatus" key="Status"/>
                                                                                      </pipelet-node>
                                                                                      <node-display orientation="horizontal" x="1" y="0"/>
                                                                                      <branch basename="b3" source-connector="error">
                                                                                        <transition target-connector="in2" target-path="../../../../../../../../../../../../b3.13">
                                                                                          <transition-display>
                                                                                            <bend-point relative-to="source" x="0" y="1"/>
                                                                                            <bend-point relative-to="target" x="-1" y="-1"/>
                                                                                          </transition-display>
                                                                                        </transition>
                                                                                      </branch>
                                                                                    </node>
                                                                                    <transition target-connector="in2" target-path="../../../../../../../../../../../../../+13"/>
                                                                                  </segment>
                                                                                </branch>
                                                                              </node>
                                                                              <simple-transition>
                                                                                <transition-display>
                                                                                  <bend-point relative-to="source" x="1" y="0"/>
                                                                                </transition-display>
                                                                              </simple-transition>
                                                                              <node>
                                                                                <pipelet-node pipelet-name="ImportSlots" pipelet-set-identifier="bc_api">
                                                                                  <key-binding alias="File" key="ImportFile"/>
                                                                                  <key-binding alias="Task.getParameter('importMode', 'MERGE')" key="ImportMode"/>
                                                                                  <key-binding alias="null" key="ErrorCode"/>
                                                                                  <key-binding alias="null" key="ErrorMsg"/>
                                                                                  <key-binding alias="null" key="LogFileName"/>
                                                                                  <key-binding alias="ImportStatus" key="Status"/>
                                                                                </pipelet-node>
                                                                                <node-display orientation="horizontal" x="1" y="0"/>
                                                                                <branch basename="b3" source-connector="error">
                                                                                  <transition target-connector="in2" target-path="../../../../../../../../../../../b3.12">
                                                                                    <transition-display>
                                                                                      <bend-point relative-to="source" x="0" y="1"/>
                                                                                      <bend-point relative-to="target" x="-1" y="-1"/>
                                                                                    </transition-display>
                                                                                  </transition>
                                                                                </branch>
                                                                              </node>
                                                                              <transition target-connector="in2" target-path="../../../../../../../../../../../../+12"/>
                                                                            </segment>
                                                                          </branch>
                                                                        </node>
                                                                        <simple-transition>
                                                                          <transition-display>
                                                                            <bend-point relative-to="source" x="1" y="0"/>
                                                                          </transition-display>
                                                                        </simple-transition>
                                                                        <node>
                                                                          <pipelet-node pipelet-name="ImportShippingMethods" pipelet-set-identifier="bc_api">
                                                                            <key-binding alias="File" key="ImportFile"/>
                                                                            <key-binding alias="Task.getParameter('importMode', 'MERGE')" key="ImportMode"/>
                                                                            <key-binding alias="null" key="ErrorCode"/>
                                                                            <key-binding alias="null" key="ErrorMsg"/>
                                                                            <key-binding alias="null" key="LogFileName"/>
                                                                            <key-binding alias="ImportStatus" key="Status"/>
                                                                          </pipelet-node>
                                                                          <node-display orientation="horizontal" x="1" y="0"/>
                                                                          <branch basename="b3" source-connector="error">
                                                                            <transition target-connector="in2" target-path="../../../../../../../../../../b3.11">
                                                                              <transition-display>
                                                                                <bend-point relative-to="source" x="0" y="1"/>
                                                                                <bend-point relative-to="target" x="-1" y="-1"/>
                                                                              </transition-display>
                                                                            </transition>
                                                                          </branch>
                                                                        </node>
                                                                        <transition target-connector="in2" target-path="../../../../../../../../../../../+11"/>
                                                                      </segment>
                                                                    </branch>
                                                                  </node>
                                                                  <simple-transition>
                                                                    <transition-display>
                                                                      <bend-point relative-to="source" x="1" y="0"/>
                                                                    </transition-display>
                                                                  </simple-transition>
                                                                  <node>
                                                                    <pipelet-node pipelet-name="ImportPromotions" pipelet-set-identifier="bc_api">
                                                                      <key-binding alias="File" key="ImportFile"/>
                                                                      <key-binding alias="Task.getParameter('importMode', 'MERGE')" key="ImportMode"/>
                                                                      <key-binding alias="null" key="ErrorCode"/>
                                                                      <key-binding alias="null" key="ErrorMsg"/>
                                                                      <key-binding alias="null" key="LogFileName"/>
                                                                      <key-binding alias="ImportStatus" key="Status"/>
                                                                    </pipelet-node>
                                                                    <node-display orientation="horizontal" x="1" y="0"/>
                                                                    <branch basename="b3" source-connector="error">
                                                                      <transition target-connector="in2" target-path="../../../../../../../../../b3.10">
                                                                        <transition-display>
                                                                          <bend-point relative-to="source" x="0" y="1"/>
                                                                          <bend-point relative-to="target" x="-1" y="-1"/>
                                                                        </transition-display>
                                                                      </transition>
                                                                    </branch>
                                                                  </node>
                                                                  <transition target-connector="in2" target-path="../../../../../../../../../../+10"/>
                                                                </segment>
                                                              </branch>
                                                            </node>
                                                            <simple-transition>
                                                              <transition-display>
                                                                <bend-point relative-to="source" x="1" y="0"/>
                                                              </transition-display>
                                                            </simple-transition>
                                                            <node>
                                                              <pipelet-node pipelet-name="ImportPriceBooks" pipelet-set-identifier="bc_api">
                                                                <key-binding alias="File" key="ImportFile"/>
                                                                <key-binding alias="Task.getParameter('importMode', 'MERGE')" key="ImportMode"/>
                                                                <key-binding alias="null" key="ErrorCode"/>
                                                                <key-binding alias="null" key="ErrorMsg"/>
                                                                <key-binding alias="null" key="LogFileName"/>
                                                                <key-binding alias="ImportStatus" key="Status"/>
                                                              </pipelet-node>
                                                              <node-display orientation="horizontal" x="1" y="0"/>
                                                              <branch basename="b3" source-connector="error">
                                                                <transition target-connector="in1" target-path="../../../../../../../../b3.9">
                                                                  <transition-display>
                                                                    <bend-point relative-to="source" x="0" y="1"/>
                                                                    <bend-point relative-to="target" x="-1" y="-1"/>
                                                                  </transition-display>
                                                                </transition>
                                                              </branch>
                                                            </node>
                                                            <transition target-connector="in1" target-path="../../../../../../../../../+9"/>
                                                          </segment>
                                                        </branch>
                                                      </node>
                                                      <simple-transition>
                                                        <transition-display>
                                                          <bend-point relative-to="source" x="1" y="0"/>
                                                        </transition-display>
                                                      </simple-transition>
                                                      <node>
                                                        <pipelet-node pipelet-name="ImportGiftCertificates" pipelet-set-identifier="bc_api">
                                                          <key-binding alias="File" key="ImportFile"/>
                                                          <key-binding alias="Task.getParameter('importMode', 'MERGE')" key="ImportMode"/>
                                                          <key-binding alias="null" key="ErrorCode"/>
                                                          <key-binding alias="null" key="ErrorMsg"/>
                                                          <key-binding alias="null" key="LogFileName"/>
                                                          <key-binding alias="ImportStatus" key="Status"/>
                                                        </pipelet-node>
                                                        <node-display orientation="horizontal" x="1" y="0"/>
                                                        <branch basename="b3" source-connector="error">
                                                          <transition target-connector="in1" target-path="../../../../../../../b3.8">
                                                            <transition-display>
                                                              <bend-point relative-to="source" x="0" y="1"/>
                                                              <bend-point relative-to="target" x="-1" y="-1"/>
                                                            </transition-display>
                                                          </transition>
                                                        </branch>
                                                      </node>
                                                      <transition target-connector="in2" target-path="../../../../../../../../+8"/>
                                                    </segment>
                                                  </branch>
                                                </node>
                                                <simple-transition>
                                                  <transition-display>
                                                    <bend-point relative-to="source" x="1" y="0"/>
                                                  </transition-display>
                                                </simple-transition>
                                                <node>
                                                  <pipelet-node pipelet-name="ImportCustomers" pipelet-set-identifier="bc_api">
                                                    <key-binding alias="Task.getParameter('importMode', 'MERGE')" key="ImportMode"/>
                                                    <key-binding alias="File" key="ImportFile"/>
                                                    <key-binding alias="null" key="ErrorCode"/>
                                                    <key-binding alias="null" key="ErrorMsg"/>
                                                    <key-binding alias="null" key="LogFileName"/>
                                                    <key-binding alias="ImportStatus" key="Status"/>
                                                  </pipelet-node>
                                                  <node-display orientation="horizontal" x="1" y="0"/>
                                                  <branch basename="b3" source-connector="error">
                                                    <transition target-connector="in2" target-path="../../../../../../b3.7">
                                                      <transition-display>
                                                        <bend-point relative-to="source" x="0" y="1"/>
                                                        <bend-point relative-to="target" x="-1" y="-1"/>
                                                      </transition-display>
                                                    </transition>
                                                  </branch>
                                                </node>
                                                <transition target-connector="in2" target-path="../../../../../../../+7"/>
                                              </segment>
                                            </branch>
                                          </node>
                                          <simple-transition>
                                            <transition-display>
                                              <bend-point relative-to="source" x="1" y="0"/>
                                            </transition-display>
                                          </simple-transition>
                                          <node>
                                            <pipelet-node pipelet-name="ImportCustomObjects" pipelet-set-identifier="bc_api">
                                              <key-binding alias="File" key="ImportFile"/>
                                              <key-binding alias="Task.getParameter('importMode', 'MERGE')" key="ImportMode"/>
                                              <key-binding alias="null" key="ErrorCode"/>
                                              <key-binding alias="null" key="ErrorMsg"/>
                                              <key-binding alias="null" key="LogFileName"/>
                                              <key-binding alias="ImportStatus" key="Status"/>
                                            </pipelet-node>
                                            <node-display orientation="horizontal" x="1" y="0"/>
                                            <branch basename="b3" source-connector="error">
                                              <transition target-connector="in2" target-path="../../../../../b3.6">
                                                <transition-display>
                                                  <bend-point relative-to="source" x="0" y="1"/>
                                                  <bend-point relative-to="target" x="-1" y="-1"/>
                                                </transition-display>
                                              </transition>
                                            </branch>
                                          </node>
                                          <transition target-connector="in2" target-path="../../../../../../+6"/>
                                        </segment>
                                      </branch>
                                    </node>
                                    <simple-transition>
                                      <transition-display>
                                        <bend-point relative-to="source" x="1" y="0"/>
                                      </transition-display>
                                    </simple-transition>
                                    <node>
                                      <pipelet-node pipelet-name="ImportCoupons" pipelet-set-identifier="bc_api">
                                        <key-binding alias="File" key="ImportFile"/>
                                        <key-binding alias="Task.getParameter('importMode', 'MERGE')" key="ImportMode"/>
                                        <key-binding alias="null" key="ErrorCode"/>
                                        <key-binding alias="null" key="ErrorMsg"/>
                                        <key-binding alias="null" key="LogFileName"/>
                                        <key-binding alias="ImportStatus" key="Status"/>
                                      </pipelet-node>
                                      <node-display orientation="horizontal" x="1" y="0"/>
                                      <branch basename="b3" source-connector="error">
                                        <transition target-connector="in2" target-path="../../../../b3.5">
                                          <transition-display>
                                            <bend-point relative-to="source" x="0" y="1"/>
                                            <bend-point relative-to="target" x="-1" y="-1"/>
                                          </transition-display>
                                        </transition>
                                      </branch>
                                    </node>
                                    <transition target-connector="in2" target-path="../../../../../+5"/>
                                  </segment>
                                </branch>
                              </node>
                              <simple-transition>
                                <transition-display>
                                  <bend-point relative-to="source" x="1" y="0"/>
                                </transition-display>
                              </simple-transition>
                              <node>
                                <pipelet-node pipelet-name="ImportContent" pipelet-set-identifier="bc_api">
                                  <key-binding alias="File" key="ImportFile"/>
                                  <key-binding alias="Task.getParameter('importMode', 'MERGE')" key="ImportMode"/>
                                  <key-binding alias="dw.content.ContentMgr.getSiteLibrary()" key="Library"/>
                                  <key-binding alias="null" key="ErrorCode"/>
                                  <key-binding alias="null" key="ErrorMsg"/>
                                  <key-binding alias="null" key="LogFileName"/>
                                  <key-binding alias="ImportStatus" key="Status"/>
                                </pipelet-node>
                                <node-display orientation="horizontal" x="1" y="0"/>
                                <branch basename="b3" source-connector="error">
                                  <transition target-connector="in2" target-path="../../../b3.4">
                                    <transition-display>
                                      <bend-point relative-to="source" x="0" y="1"/>
                                      <bend-point relative-to="target" x="-1" y="-1"/>
                                    </transition-display>
                                  </transition>
                                </branch>
                              </node>
                              <transition target-connector="in2" target-path="../../../../+4"/>
                            </segment>
                          </branch>
                        </node>
                        <simple-transition>
                          <transition-display>
                            <bend-point relative-to="source" x="1" y="0"/>
                          </transition-display>
                        </simple-transition>
                        <node>
                          <pipelet-node pipelet-name="ImportCatalog" pipelet-set-identifier="bc_api">
                            <key-binding alias="File" key="ImportFile"/>
                            <key-binding alias="Task.getParameter('importMode', 'MERGE')" key="ImportMode"/>
                            <key-binding alias="null" key="ErrorCode"/>
                            <key-binding alias="null" key="ErrorMsg"/>
                            <key-binding alias="null" key="LogFileName"/>
                            <key-binding alias="ImportStatus" key="Status"/>
                            <key-binding alias="null" key="ImportConfiguration"/>
                          </pipelet-node>
                          <node-display orientation="horizontal" x="1" y="0"/>
                          <branch basename="b3" source-connector="error">
                            <transition target-connector="in1" target-path="../../b3.3">
                              <transition-display>
                                <bend-point relative-to="source" x="0" y="1"/>
                                <bend-point relative-to="target" x="-1" y="-1"/>
                              </transition-display>
                            </transition>
                          </branch>
                        </node>
                        <transition target-connector="in1" target-path="../../../+3"/>
                      </segment>
                    </branch>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="1" y="0"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <pipelet-node pipelet-name="ImportActiveData" pipelet-set-identifier="bc_api">
                      <key-binding alias="File" key="ImportFile"/>
                      <key-binding alias="null" key="ErrorCode"/>
                      <key-binding alias="null" key="ErrorMsg"/>
                      <key-binding alias="null" key="LogFileName"/>
                      <key-binding alias="ImportStatus" key="Status"/>
                    </pipelet-node>
                    <node-display orientation="horizontal" x="1" y="0"/>
                    <branch basename="b3" source-connector="error">
                      <transition target-connector="in1" target-path="../b3.2">
                        <transition-display>
                          <bend-point relative-to="source" x="0" y="1"/>
                          <bend-point relative-to="target" x="-1" y="-1"/>
                        </transition-display>
                      </transition>
                    </branch>
                  </node>
                  <transition target-connector="in1" target-path="../../+2"/>
                </segment>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <call-node start-name-ref="FeedSteps-ImportInventory"/>
              <node-display orientation="horizontal" x="1" y="0"/>
              <branch basename="b3" source-connector="FAILED">
                <transition target-connector="in1">
                  <transition-display>
                    <bend-point relative-to="source" x="0" y="1"/>
                    <bend-point relative-to="target" x="-1" y="-1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="2" y="1"/>
                  </node>
                  <transition target-connector="in2" target-path="./+1"/>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="in2" target-path="./+1"/>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="in1" target-path="./+1"/>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="in1" target-path="./+1"/>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="in1" target-path="./+1"/>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="in1" target-path="./+1"/>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="in1" target-path="./+1"/>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="in1" target-path="./+1"/>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="in1" target-path="./+1"/>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="in1" target-path="./+1"/>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="in1" target-path="./+1"/>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="in1" target-path="./+1"/>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="in1" target-path="./+1"/>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="in1" target-path="./+1"/>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition/>
                  <node>
                    <pipelet-node custom-name="calculate ImportRuntime" pipelet-name="Eval" pipelet-set-identifier="bc_api">
                      <config-property key="OnError" value="null"/>
                      <config-property key="Transactional" value="false"/>
                      <config-property key="Expression" value="new Date().getTime()-ImportStartTime"/>
                      <key-binding alias="ImportRuntime" key="Result"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition/>
                  <node>
                    <end-node name="PROCESS_ERROR"/>
                    <node-display x="0" y="1"/>
                  </node>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="Determine Implementing Pipeline" pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="Exception"/>
          <config-property key="ScriptFile" value="customization/GetPipelineHook.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="&quot;import.orderstatus&quot;" key="hookName"/>
          <key-binding alias="HookPipeline" key="hookPipeline"/>
        </pipelet-node>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="FeedSteps-OrderUpdateHook"/>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in2" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in2" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="calculate ImportRuntime" pipelet-name="Eval" pipelet-set-identifier="bc_api">
          <config-property key="OnError" value="null"/>
          <config-property key="Transactional" value="false"/>
          <config-property key="Expression" value="new Date().getTime()-ImportStartTime"/>
          <key-binding alias="ImportRuntime" key="Result"/>
        </pipelet-node>
        <node-display x="0" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <end-node name="PROCESS_SUCCESS"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_21">
    <segment>
      <node>
        <text-node>
          <description>Updates the Export_status as Ready for Export</description>
        </text-node>
        <node-display x="16" y="8"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_22">
    <segment>
      <node>
        <text-node>
          <description>Uploads the Feed</description>
        </text-node>
        <node-display x="16" y="10"/>
      </node>
    </segment>
  </branch>
  <branch basename="UploadFeeds">
    <segment>
      <node>
        <start-node call-mode="private" name="UploadFeeds" secure="false"/>
        <node-display x="1" y="15"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node custom-name="Set Folder and RemoteFolder" pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="Task.getParameter('localFolder')" key="From_0"/>
          <key-binding alias="Folder" key="To_0"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
          <key-binding alias="''" key="From_1"/>
          <key-binding alias="RemoteFolder" key="To_1"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="FeedSteps-UploadFiles"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="UploadFileStructure">
    <segment>
      <node>
        <start-node call-mode="private" name="UploadFileStructure" secure="false"/>
        <node-display x="4" y="15"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node custom-name="FoldersTodo = [ RootFolder ]" pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="Task.getParameter('localFolder').replace( /\/$/, '')" key="From_0"/>
          <key-binding alias="RootFolder" key="To_0"/>
          <key-binding alias="[ RootFolder ]" key="From_1"/>
          <key-binding alias="FoldersTodo" key="To_1"/>
          <key-binding alias="0" key="From_2"/>
          <key-binding alias="FolderIndex" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="FoldersTodo.length &gt; FolderIndex" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node custom-name="Current Folder and RemoteFolder" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="FoldersTodo[FolderIndex]" key="From_0"/>
                <key-binding alias="Folder" key="To_0"/>
                <key-binding alias="Folder.substr( RootFolder.length + 1  )" key="From_1"/>
                <key-binding alias="FolderIndex + 1" key="From_2"/>
                <key-binding alias="FolderIndex" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
                <key-binding alias="RemoteFolder" key="To_1"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <call-node start-name-ref="FeedSteps-CheckFolderHook"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="SKIP">
                <transition target-connector="in1" target-path="./+2"/>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node custom-name="Task.setStatusMessage(&quot;Processing Folder &quot; + RemoteFolder )" pipelet-name="Eval" pipelet-set-identifier="bc_api">
                <config-property key="OnError" value="null"/>
                <config-property key="Transactional" value="true"/>
                <config-property key="Expression" value="Task.setStatusMessage(&quot;Processing Folder &quot; + RemoteFolder )"/>
                <key-binding alias="Result" key="Result"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="feeds/CreateFolder.ds"/>
                <key-binding alias="ScriptLog" key="ScriptLog"/>
                <key-binding alias="RemoteFolder" key="Folder"/>
                <key-binding alias="Task.getParameter('remoteFolderUrl')" key="RemoteFolderURL"/>
                <key-binding alias="Task.getParameter('remoteLogin')" key="RemoteLogin"/>
                <key-binding alias="Task.getParameter('remotePassword')" key="RemotePassword"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b3" source-connector="error">
                <transition target-connector="in1" target-path="./b4.1">
                  <transition-display>
                    <bend-point relative-to="source" x="2" y="0"/>
                  </transition-display>
                </transition>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <call-node start-name-ref="FeedSteps-UploadFiles"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <config-property key="OnError" value="Exception"/>
                <config-property key="ScriptFile" value="feeds/AddSubFolders.ds"/>
                <key-binding alias="ScriptLog" key="ScriptLog"/>
                <key-binding alias="Folder" key="Folder"/>
                <key-binding alias="FoldersTodo" key="InFolders"/>
                <key-binding alias="FoldersTodo" key="OutFolders"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b4" source-connector="error">
                <transition target-connector="in1"/>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="1" y="0"/>
                  </node>
                  <transition target-connector="in1" target-path="../+1">
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="2"/>
                    </transition-display>
                  </transition>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in1" target-path="./+1">
              <transition-display>
                <bend-point relative-to="source" x="-2" y="0"/>
              </transition-display>
            </transition>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="-1" y="-4"/>
            </node>
            <transition target-connector="in1" target-path="..">
              <transition-display>
                <bend-point relative-to="target" x="-2" y="0"/>
              </transition-display>
            </transition>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <end-node/>
        <node-display orientation="horizontal" x="2" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="CheckFolderHook">
    <segment>
      <node>
        <start-node call-mode="private" name="CheckFolderHook" secure="false"/>
        <node-display x="7" y="15"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="!empty( FolderHook )" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <jump-node start-name-key="FolderHook"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <end-node/>
        <node-display orientation="horizontal" x="2" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="ImportInventory">
    <segment>
      <node>
        <start-node call-mode="private" name="ImportInventory" secure="false"/>
        <node-display x="15" y="15"/>
      </node>
      <simple-transition transaction-control="begin"/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="customization/CustomInventoryFeed.ds"/>
          <config-property key="Timeout" value="3600"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="RemoteFile" key="OriginalFile"/>
          <key-binding alias="Task.getParameter('tempFolder')" key="TempFolder"/>
          <key-binding alias="CustomFile" key="CustomFeedFile"/>
          <key-binding alias="ErrorMessage" key="StatusMessage"/>
          <key-binding alias="Task.getParameter(stockReconcilation', 'false')" key="StockreconcillationReq"/>
          <key-binding alias="Task.getParameter('inventoryStockLavel', 'physical')" key="StockReconcillationReq"/>
          <key-binding alias="Task.getParameter('inventoryStockLevel','physical')" key="inventoryStockLevel"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in" transaction-control="rollback">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-2"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="&quot;Error in new inventory feed creation &quot;+ErrorMessage" key="From_0"/>
                <key-binding alias="ErrorMessage" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="3" y="1"/>
            </node>
            <transition target-connector="in2" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="&quot;process_error&quot;" key="From_0"/>
                <key-binding alias="EmailFlow" key="To_0"/>
                <key-binding alias="true" key="From_1"/>
                <key-binding alias="InstanceReqd" key="To_1"/>
                <key-binding alias="new dw.util.HashMap()" key="From_2"/>
                <key-binding alias="MailParams" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="null" key="From_0"/>
                <key-binding alias="null" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="MailParams.put(&quot;ErrorMessage&quot;,ErrorMessage )" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="MailParams.put(&quot;SiteId&quot;,dw.system.Site.getCurrent().ID)" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="MailParams.put(&quot;RemoteURL&quot;, Task.getParameter('remoteFolderUrl'))" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="MailParams.put(&quot;JobConfigurationId&quot;,JobConfigID)" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
                <key-binding alias="MailParams.put(&quot;RemoteFile&quot;,RemoteFile )" key="From_6"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <call-node start-name-ref="Email-SendMail"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="FAILED"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition transaction-control="savepoint"/>
      <node>
        <pipelet-node pipelet-name="ImportInventoryLists" pipelet-set-identifier="bc_api">
          <key-binding alias="CustomFile" key="ImportFile"/>
          <key-binding alias="Task.getParameter('importMode', 'MERGE')" key="ImportMode"/>
          <key-binding alias="null" key="ErrorCode"/>
          <key-binding alias="null" key="ErrorMsg"/>
          <key-binding alias="null" key="LogFileName"/>
          <key-binding alias="ImportStatus" key="Status"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in"/>
          <segment>
            <node>
              <call-node start-name-ref="FeedSteps-ArchiveInventoryFailureFeed"/>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
            <simple-transition/>
            <node>
              <end-node name="FAILED"/>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition transaction-control="commit"/>
      <node>
        <end-node/>
        <node-display x="0" y="2"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_27">
    <segment>
      <node>
        <text-node>
          <description>Archives the Feed</description>
        </text-node>
        <node-display x="16" y="12"/>
      </node>
    </segment>
  </branch>
  <branch basename="OrderUpdateHook">
    <segment>
      <node>
        <start-node call-mode="private" name="OrderUpdateHook" secure="false"/>
        <node-display x="21" y="16"/>
      </node>
      <simple-transition transaction-control="begin"/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="customization/ImportOrder.ds"/>
          <config-property key="Timeout" value="3600"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="null" key="file"/>
          <key-binding alias="RemoteFile" key="RemoteFile"/>
          <key-binding alias="File" key="File"/>
          <key-binding alias="ErrorType" key="ERRORTYPE"/>
          <key-binding alias="ErrorMessage" key="ErrorMessage"/>
          <key-binding alias="EmailFlow" key="EmailFlow"/>
          <key-binding alias="Order" key="Order"/>
          <key-binding alias="InvoiceAttachmnetRequired" key="InvoiceAttachmnetRequired"/>
          <key-binding alias="InvoiceAttachmentRequired" key="InvoiceAttachmentRequired"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./b3.1" transaction-control="rollback"/>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="customization/GetCategoryImage.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="Order" key="ORDER"/>
          <key-binding alias="catImage" key="CATIMAGEPATH"/>
          <key-binding alias="Order.custom.staticCategoryId" key="CategoryId"/>
          <key-binding alias="LogoImage" key="LogoImageABSUrl"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1" transaction-control="rollback"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="-1"/>
            </node>
            <simple-transition/>
            <node>
              <jump-node start-name-ref="FeedSteps-OrderUpdateFail"/>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition transaction-control="commit"/>
      <node>
        <decision-node condition-key="!empty(EmailFlow)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b4" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <decision-node condition-key="!Order.paymentInstrument.paymentMethod.equals( 'ORDER_COMPLIMENTARY')" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <decision-node condition-key="Order.paymentInstrument.paymentMethod.equals( 'ORDER_REPLACEMENT')" condition-operator="expr"/>
                    <node-display x="0" y="1"/>
                    <branch basename="b2" source-connector="yes">
                      <transition target-connector="in">
                        <transition-display>
                          <bend-point relative-to="source" x="0" y="1"/>
                        </transition-display>
                      </transition>
                      <segment>
                        <node>
                          <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                            <config-property key="Transactional" value="false"/>
                            <key-binding alias="false" key="From_0"/>
                            <key-binding alias="InvoiceAttachmentRequired" key="To_0"/>
                            <key-binding alias="null" key="From_1"/>
                            <key-binding alias="null" key="To_1"/>
                            <key-binding alias="null" key="From_2"/>
                            <key-binding alias="null" key="To_2"/>
                            <key-binding alias="null" key="From_3"/>
                            <key-binding alias="null" key="To_3"/>
                            <key-binding alias="null" key="From_4"/>
                            <key-binding alias="null" key="To_4"/>
                            <key-binding alias="null" key="From_5"/>
                            <key-binding alias="null" key="To_5"/>
                            <key-binding alias="null" key="From_6"/>
                            <key-binding alias="null" key="To_6"/>
                            <key-binding alias="null" key="From_7"/>
                            <key-binding alias="null" key="To_7"/>
                            <key-binding alias="null" key="From_8"/>
                            <key-binding alias="null" key="To_8"/>
                            <key-binding alias="null" key="From_9"/>
                            <key-binding alias="null" key="To_9"/>
                          </pipelet-node>
                          <node-display x="0" y="1"/>
                        </node>
                        <transition target-connector="in1" target-path="../+1"/>
                      </segment>
                    </branch>
                  </node>
                  <transition target-connector="in2" target-path="./+1">
                    <transition-display>
                      <bend-point relative-to="source" x="2" y="0"/>
                      <bend-point relative-to="target" x="2" y="0"/>
                    </transition-display>
                  </transition>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="0" y="2"/>
                  </node>
                  <simple-transition/>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="new dw.util.HashMap()" key="From_1"/>
                      <key-binding alias="MailParams" key="To_1"/>
                      <key-binding alias="null" key="From_2"/>
                      <key-binding alias="null" key="To_2"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="null" key="From_4"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="null" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                      <key-binding alias="ErrorType" key="To_0"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="1"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <config-property key="OnError" value="PIPELET_ERROR"/>
                      <config-property key="ScriptFile" value="app_mhe_core:account/user/updateGreetingMessage.ds"/>
                      <key-binding alias="null" key="ScriptLog"/>
                      <key-binding alias="empty(Order.customer.profile)?(empty(Order.billingAddress.salutation)?&quot;&quot;:Order.billingAddress.salutation):(empty(Order.customer.profile.salutation)?&quot;&quot;:Order.customer.profile.salutation)" key="Salutation"/>
                      <key-binding alias="GreetingHeader" key="GreetingHeader"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition/>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="empty(Order.customer.profile)?Order.billingAddress.title:Order.customer.profile.title" key="From_0"/>
                      <key-binding alias="custTitle" key="To_0"/>
                      <key-binding alias="null" key="From_1"/>
                      <key-binding alias="null" key="To_1"/>
                      <key-binding alias="null" key="From_2"/>
                      <key-binding alias="null" key="To_2"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="null" key="From_4"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="null" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                    </pipelet-node>
                    <node-display orientation="horizontal" x="-1" y="1"/>
                  </node>
                  <simple-transition/>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="Order.customerEmail" key="From_0"/>
                      <key-binding alias="MailTo" key="To_0"/>
                      <key-binding alias="MailParams.put(&quot;greetingHeader&quot;,GreetingHeader)" key="From_2"/>
                      <key-binding alias="null" key="To_2"/>
                      <key-binding alias="MailParams.put(&quot;shippingmethod&quot;,Order.defaultShipment.shippingMethod.displayName)" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="MailParams.put(&quot;catimageabspath&quot;,LogoImage)" key="From_4"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="MailParams.put(&quot;salutation&quot;,empty(Order.customer.profile)?Order.billingAddress.salutation:Order.customer.profile.salutation)" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="To_9"/>
                      <key-binding alias="MailParams.put(&quot;lastname&quot;,empty(Order.customer.profile)?Order.billingAddress.lastName:Order.customer.profile.lastName)" key="From_7"/>
                      <key-binding alias="MailParams.put(&quot;orderNumber&quot;,Order.orderNo)" key="From_5"/>
                      <key-binding alias="MailParams.put(&quot;title&quot;,!empty(custTitle)?custTitle:&quot;&quot;)" key="From_8"/>
                      <key-binding alias="MailParams.put(&quot;firstname&quot;,empty(Order.customer.profile)?Order.billingAddress.firstName:Order.customer.profile.firstName)" key="From_9"/>
                    </pipelet-node>
                    <node-display x="1" y="0"/>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="1"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <decision-node condition-key="InvoiceAttachmentRequired==true" condition-operator="expr"/>
                    <node-display x="0" y="1"/>
                    <branch basename="b2" source-connector="yes">
                      <transition target-connector="in">
                        <transition-display>
                          <bend-point relative-to="source" x="0" y="1"/>
                        </transition-display>
                      </transition>
                      <segment>
                        <node>
                          <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                            <config-property key="Transactional" value="false"/>
                            <config-property key="OnError" value="PIPELET_ERROR"/>
                            <config-property key="ScriptFile" value="pdf/createPDFFileWriter.ds"/>
                            <key-binding alias="null" key="ScriptLog"/>
                            <key-binding alias="Order.orderNo" key="OrderNo"/>
                            <key-binding alias="dw.web.URLUtils.https('Invoice-InvoiceData').toString()" key="URL"/>
                            <key-binding alias="fileNameWithPath" key="fileNameWithPath"/>
                            <key-binding alias="fileName" key="fileNameToArchive"/>
                            <key-binding alias="PDFFile" key="file"/>
                            <key-binding alias="mailBCC" key="mailBcc"/>
                          </pipelet-node>
                          <node-display x="0" y="1"/>
                          <branch basename="b2" source-connector="error">
                            <transition target-connector="in"/>
                            <segment>
                              <node>
                                <call-node start-name-ref="Email-SendMail"/>
                                <node-display orientation="horizontal" x="1" y="0"/>
                              </node>
                              <simple-transition/>
                              <node>
                                <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                                  <config-property key="Transactional" value="false"/>
                                  <key-binding alias="&quot;&quot;" key="From_0"/>
                                  <key-binding alias="MailTo" key="To_0"/>
                                  <key-binding alias="dw.web.Resource.msg(&quot;invoice.fail&quot;,&quot;account&quot;,null)+Order.orderNo" key="From_1"/>
                                  <key-binding alias="ErrorMessage" key="To_1"/>
                                  <key-binding alias="&quot;validation_error&quot;" key="From_2"/>
                                  <key-binding alias="ErrorType" key="To_2"/>
                                  <key-binding alias="&quot;validation_error&quot;" key="From_3"/>
                                  <key-binding alias="EmailFlow" key="To_3"/>
                                  <key-binding alias="&quot;&quot;" key="From_4"/>
                                  <key-binding alias="MailSubject" key="To_4"/>
                                  <key-binding alias="null" key="From_5"/>
                                  <key-binding alias="null" key="To_5"/>
                                  <key-binding alias="null" key="From_6"/>
                                  <key-binding alias="null" key="To_6"/>
                                  <key-binding alias="null" key="From_7"/>
                                  <key-binding alias="null" key="To_7"/>
                                  <key-binding alias="null" key="From_8"/>
                                  <key-binding alias="null" key="To_8"/>
                                  <key-binding alias="null" key="From_9"/>
                                  <key-binding alias="null" key="To_9"/>
                                </pipelet-node>
                                <node-display orientation="horizontal" x="1" y="0"/>
                              </node>
                              <simple-transition>
                                <transition-display>
                                  <bend-point relative-to="source" x="1" y="0"/>
                                </transition-display>
                              </simple-transition>
                              <node>
                                <call-node start-name-ref="FeedSteps-OrderUpdateFail"/>
                                <node-display orientation="horizontal" x="1" y="0"/>
                              </node>
                              <simple-transition>
                                <transition-display>
                                  <bend-point relative-to="source" x="1" y="0"/>
                                </transition-display>
                              </simple-transition>
                              <node>
                                <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                                  <config-property key="Transactional" value="false"/>
                                  <key-binding alias="null" key="From_0"/>
                                  <key-binding alias="ErrorType" key="To_0"/>
                                  <key-binding alias="null" key="From_1"/>
                                  <key-binding alias="null" key="To_1"/>
                                  <key-binding alias="null" key="From_2"/>
                                  <key-binding alias="null" key="To_2"/>
                                  <key-binding alias="null" key="From_3"/>
                                  <key-binding alias="null" key="To_3"/>
                                  <key-binding alias="null" key="From_4"/>
                                  <key-binding alias="null" key="To_4"/>
                                  <key-binding alias="null" key="From_5"/>
                                  <key-binding alias="null" key="To_5"/>
                                  <key-binding alias="null" key="From_6"/>
                                  <key-binding alias="null" key="To_6"/>
                                  <key-binding alias="null" key="From_7"/>
                                  <key-binding alias="null" key="To_7"/>
                                  <key-binding alias="null" key="From_8"/>
                                  <key-binding alias="null" key="To_8"/>
                                  <key-binding alias="null" key="From_9"/>
                                  <key-binding alias="null" key="To_9"/>
                                </pipelet-node>
                                <node-display orientation="horizontal" x="1" y="0"/>
                              </node>
                              <simple-transition>
                                <transition-display>
                                  <bend-point relative-to="source" x="1" y="0"/>
                                </transition-display>
                              </simple-transition>
                              <node>
                                <end-node/>
                                <node-display orientation="horizontal" x="1" y="0"/>
                              </node>
                            </segment>
                          </branch>
                        </node>
                        <simple-transition/>
                        <node>
                          <pipelet-node custom-name="Collect Log Files" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                            <config-property key="Transactional" value="false"/>
                            <key-binding alias="new dw.util.ArrayList()" key="From_0"/>
                            <key-binding alias="logFiles" key="To_0"/>
                            <key-binding alias="mailBCC" key="From_1"/>
                            <key-binding alias="MailBCC" key="To_1"/>
                            <key-binding alias="null" key="From_2"/>
                            <key-binding alias="null" key="To_2"/>
                            <key-binding alias="null" key="From_3"/>
                            <key-binding alias="null" key="To_3"/>
                            <key-binding alias="null" key="From_4"/>
                            <key-binding alias="null" key="To_4"/>
                            <key-binding alias="null" key="From_5"/>
                            <key-binding alias="null" key="To_5"/>
                            <key-binding alias="null" key="From_6"/>
                            <key-binding alias="null" key="To_6"/>
                            <key-binding alias="null" key="From_7"/>
                            <key-binding alias="null" key="To_7"/>
                            <key-binding alias="null" key="From_8"/>
                            <key-binding alias="null" key="To_8"/>
                            <key-binding alias="null" key="From_9"/>
                            <key-binding alias="null" key="To_9"/>
                          </pipelet-node>
                          <node-display x="0" y="2"/>
                        </node>
                        <simple-transition>
                          <transition-display>
                            <bend-point relative-to="source" x="0" y="1"/>
                          </transition-display>
                        </simple-transition>
                        <node>
                          <pipelet-node pipelet-name="Eval" pipelet-set-identifier="bc_api">
                            <config-property key="OnError" value="null"/>
                            <config-property key="Transactional" value="false"/>
                            <config-property key="Expression" value="logFiles.add(fileNameWithPath)"/>
                            <key-binding alias="Result" key="Result"/>
                          </pipelet-node>
                          <node-display x="0" y="1"/>
                        </node>
                        <simple-transition>
                          <transition-display>
                            <bend-point relative-to="source" x="0" y="1"/>
                          </transition-display>
                        </simple-transition>
                        <node>
                          <call-node start-name-ref="Email-SendMail"/>
                          <node-display x="0" y="1"/>
                        </node>
                        <simple-transition>
                          <transition-display>
                            <bend-point relative-to="source" x="0" y="1"/>
                          </transition-display>
                        </simple-transition>
                        <node>
                          <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                            <config-property key="Transactional" value="false"/>
                            <key-binding alias="MailTo" key="To_0"/>
                            <key-binding alias="false" key="From_2"/>
                            <key-binding alias="InstanceReqd" key="To_2"/>
                            <key-binding alias="ErrorType" key="To_3"/>
                            <key-binding alias="logFiles" key="To_4"/>
                            <key-binding alias="null" key="To_5"/>
                            <key-binding alias="null" key="To_6"/>
                            <key-binding alias="null" key="To_7"/>
                            <key-binding alias="null" key="To_8"/>
                            <key-binding alias="null" key="To_9"/>
                            <key-binding alias="&quot;&quot;" key="From_0"/>
                            <key-binding alias="MailSubject" key="To_1"/>
                            <key-binding alias="&quot;&quot;" key="From_1"/>
                            <key-binding alias="new dw.util.ArrayList()" key="From_4"/>
                          </pipelet-node>
                          <node-display x="0" y="1"/>
                        </node>
                        <transition target-connector="in1" target-path="../../+2"/>
                      </segment>
                    </branch>
                  </node>
                  <simple-transition/>
                  <node>
                    <call-node start-name-ref="Email-SendMail"/>
                    <node-display orientation="horizontal" x="2" y="0"/>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="1" y="0"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="MailTo" key="To_0"/>
                      <key-binding alias="false" key="From_2"/>
                      <key-binding alias="InstanceReqd" key="To_2"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="To_9"/>
                      <key-binding alias="&quot;&quot;" key="From_0"/>
                      <key-binding alias="MailSubject" key="To_1"/>
                      <key-binding alias="&quot;&quot;" key="From_1"/>
                    </pipelet-node>
                    <node-display orientation="horizontal" x="1" y="0"/>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="1" y="0"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <end-node/>
                    <node-display orientation="horizontal" x="1" y="0"/>
                  </node>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1">
              <transition-display>
                <bend-point relative-to="source" x="-4" y="0"/>
              </transition-display>
            </transition>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="-2" y="14"/>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="2" y="0"/>
            </node>
            <simple-transition/>
            <node>
              <end-node/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="OrderUpdateFail">
    <segment>
      <node>
        <start-node call-mode="private" name="OrderUpdateFail" secure="false"/>
        <node-display x="26" y="16"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="EmailFlow" key="To_0"/>
          <key-binding alias="true" key="From_1"/>
          <key-binding alias="InstanceReqd" key="To_1"/>
          <key-binding alias="new dw.util.HashMap()" key="From_2"/>
          <key-binding alias="MailParams" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
          <key-binding alias="ErrorType" key="From_0"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="null" key="From_0"/>
          <key-binding alias="null" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="MailParams.put(&quot;ErrorMessage&quot;,ErrorMessage )" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="MailParams.put(&quot;SiteId&quot;,dw.system.Site.getCurrent().ID)" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="MailParams.put(&quot;RemoteURL&quot;, Task.getParameter('remoteFolderUrl'))" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="MailParams.put(&quot;JobConfigurationId&quot;,JobConfigID)" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
          <key-binding alias="MailParams.put(&quot;RemoteFile&quot;,RemoteFile )" key="From_6"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Email-SendMail"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="To_9"/>
          <key-binding alias="InstanceReqd" key="To_1"/>
          <key-binding alias="MailSubject" key="To_0"/>
          <key-binding alias="&quot;&quot;" key="From_0"/>
          <key-binding alias="false" key="From_1"/>
          <key-binding alias="MailTo" key="To_2"/>
          <key-binding alias="&quot;&quot;" key="From_2"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <end-node/>
        <node-display x="0" y="3"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetPastOrders">
    <segment>
      <node>
        <start-node call-mode="public" name="GetPastOrders" secure="false"/>
        <node-display x="27" y="16"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="feeds/RetrivePastOrders.ds"/>
          <config-property key="Timeout" value="1800"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="Task.getParameter('archiveFailure', 'archive')" key="ArchiveFolder"/>
          <key-binding alias="CustomFile" key="File"/>
          <key-binding alias="CurrentHttpParameterMap.orderDays.intValue" key="orderDays"/>
          <key-binding alias="OrderJSON" key="OrderJSON"/>
          <key-binding alias="CurrentHttpParameterMap.orderDays.intValue" key="OrderDays"/>
          <key-binding alias="CurrentHttpParameterMap.invStockLevel.stringValue" key="invStockLevel"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./+1"/>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="orders"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_31">
    <segment>
      <node>
        <text-node>
          <description>Parameters:
- Folder : String
- RemoteFolder : String</description>
        </text-node>
        <node-display x="1" y="23"/>
      </node>
    </segment>
  </branch>
  <branch basename="ArchiveInventoryFailureFeed">
    <segment>
      <node>
        <start-node call-mode="private" name="ArchiveInventoryFailureFeed" secure="false"/>
        <node-display x="28" y="21"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="feeds/ArchiveFeed.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="Task.getParameter('archiveFailure', 'archive')" key="ArchiveFolder"/>
          <key-binding alias="CustomFile" key="File"/>
        </pipelet-node>
        <node-display x="0" y="2"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in"/>
          <segment>
            <node>
              <end-node name="FAILED"/>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node custom-name="Task.setStatusMessage(&quot;Validation failed and import failed file archived successfully.&quot;)" pipelet-name="Eval" pipelet-set-identifier="bc_api">
          <config-property key="OnError" value="null"/>
          <config-property key="Transactional" value="true"/>
          <config-property key="Expression" value="Task.setStatusMessage(&quot;Validation failed and import failed file archived successfully.&quot;)"/>
          <key-binding alias="Result" key="Result"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="UploadFiles">
    <segment>
      <node>
        <start-node call-mode="private" name="UploadFiles" secure="false"/>
        <node-display x="1" y="24"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node custom-name="Files = Folder.listFiles()" pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
          <key-binding alias="new dw.io.File( dw.io.File.IMPEX + &quot;/src/&quot; + Folder ).listFiles()" key="From_0"/>
          <key-binding alias="Files" key="To_0"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <loop-node element-key="FileObject" iterator-key="Files"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="do">
          <transition target-connector="in"/>
          <segment>
            <node>
              <decision-node condition-key="FileObject.file" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <pipelet-node custom-name="Current File and RemoteFile" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="Folder + '/' + FileObject.name" key="From_0"/>
                      <key-binding alias="File" key="To_0"/>
                      <key-binding alias="(!empty( RemoteFolder ) ? RemoteFolder + '/' : '' ) + FileObject.name" key="From_1"/>
                      <key-binding alias="RemoteFile" key="To_1"/>
                      <key-binding alias="null" key="From_2"/>
                      <key-binding alias="null" key="To_2"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="null" key="From_4"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="null" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="1"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <pipelet-node custom-name="Task.setStatusMessage(&quot;Uploading Feed &quot; + RemoteFile)" pipelet-name="Eval" pipelet-set-identifier="bc_api">
                      <config-property key="OnError" value="null"/>
                      <config-property key="Transactional" value="true"/>
                      <config-property key="Expression" value="Task.setStatusMessage(&quot;Uploading Feed &quot; + RemoteFile)"/>
                      <key-binding alias="Result" key="Result"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="1"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <call-node start-name-ref="FeedSteps-UploadFeed"/>
                    <node-display x="0" y="1"/>
                    <branch basename="b2" source-connector="ERROR">
                      <transition target-connector="in1"/>
                      <segment>
                        <node>
                          <join-node/>
                          <node-display x="-1" y="1"/>
                        </node>
                        <transition target-connector="in1" target-path="../../+1"/>
                      </segment>
                    </branch>
                    <branch basename="b3" source-connector="FAILED">
                      <transition target-connector="in">
                        <transition-display>
                          <bend-point relative-to="target" x="0" y="-1"/>
                        </transition-display>
                      </transition>
                      <segment>
                        <node>
                          <end-node name="FAILED"/>
                          <node-display x="1" y="1"/>
                        </node>
                      </segment>
                    </branch>
                    <branch basename="b4" source-connector="SUCCESS">
                      <transition target-connector="in"/>
                      <segment>
                        <node>
                          <decision-node condition-key="empty( SkipArchive )" condition-operator="expr"/>
                          <node-display x="0" y="2"/>
                          <branch basename="b2" source-connector="yes">
                            <transition target-connector="in"/>
                            <segment>
                              <node>
                                <pipelet-node custom-name="Task.setStatusMessage(&quot;Moving file to archive.&quot;)" pipelet-name="Eval" pipelet-set-identifier="bc_api">
                                  <config-property key="OnError" value="null"/>
                                  <config-property key="Transactional" value="true"/>
                                  <config-property key="Expression" value="Task.setStatusMessage(&quot;Moving file to archive.&quot;)"/>
                                  <key-binding alias="Result" key="Result"/>
                                </pipelet-node>
                                <node-display x="0" y="1"/>
                              </node>
                              <simple-transition>
                                <transition-display>
                                  <bend-point relative-to="source" x="0" y="1"/>
                                </transition-display>
                              </simple-transition>
                              <node>
                                <call-node start-name-ref="FeedSteps-ArchiveFeed"/>
                                <node-display x="0" y="1"/>
                              </node>
                              <transition target-connector="in1" target-path="../+1">
                                <transition-display>
                                  <bend-point relative-to="source" x="0" y="1"/>
                                  <bend-point relative-to="source" x="-2" y="1"/>
                                </transition-display>
                              </transition>
                            </segment>
                          </branch>
                        </node>
                        <transition target-connector="in1" target-path="./+1"/>
                      </segment>
                      <segment>
                        <node>
                          <join-node/>
                          <node-display x="-1" y="0"/>
                        </node>
                        <transition target-connector="in3" target-path="../b2.1"/>
                      </segment>
                    </branch>
                  </node>
                </segment>
              </branch>
            </node>
            <transition target-connector="in3" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="-1" y="0"/>
            </node>
            <transition target-connector="loop" target-path="..">
              <transition-display>
                <bend-point relative-to="source" x="0" y="-2"/>
              </transition-display>
            </transition>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_34">
    <segment>
      <node>
        <text-node>
          <description>The Stop node makes the job show as ERROR in BM. Standard job notification for ERRORs can be used.</description>
        </text-node>
        <node-display x="12" y="30"/>
      </node>
    </segment>
  </branch>
</pipeline>
