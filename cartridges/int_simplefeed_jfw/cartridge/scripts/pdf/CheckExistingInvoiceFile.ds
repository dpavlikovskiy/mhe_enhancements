/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*	@input OrderNumber : String
*	@input URL : String
*   @output fileNameWithPath : String
*	@output PDFContent: String
*/
importPackage( dw.system );
importPackage( dw.content );
importPackage( dw.io );
importPackage(dw.net);
importPackage(dw.util);
importPackage(dw.web);

function execute( args : PipelineDictionary ) : Number
{
	var fileReader : FileReader = null ;
   var OrderNumber=StringUtils.decodeBase64(args.OrderNumber);
   var fileNameWithPath : String = File.IMPEX + File.SEPARATOR + "src" + File.SEPARATOR + "invoiceFiles" + File.SEPARATOR+Site.getCurrent().ID+File.SEPARATOR+ Resource.msg('invoiceattachmentname','account',null)+OrderNumber+".html";
	args.fileNameWithPath = fileNameWithPath;
	var fileout : File = new File(fileNameWithPath);
	if(!fileout.exists())
	{
	   		Logger.debug("Unable to find Invoice File ");
	   		var generatorURL = args.URL.toString()+'?OrderId='+args.OrderNumber;	   
	   		var httpClient : HTTPClient = new HTTPClient();
	 		httpClient.open('GET', generatorURL);
	 		httpClient.send();
	
	 		if (httpClient.statusCode == 200)
	 		{
	  	    	args.PDFContent = httpClient.text;
	 		}
	 		else
	 		{
	 			Logger.error("Status Code(Response) coming from Invoice generator is not equal to 200...Recieved status code is "+httpClient.statusCode);
	 			return PIPELET_ERROR;
	 		}
	}  else {
		Logger.debug("Read Invoice File ");
     	fileReader=new FileReader(fileout);
     	var line:List=fileReader.lines;
     	var lineItr: Iterator=line.iterator() ; 
    	var str:String =  "" ;
     	while(lineItr.hasNext()) {
     		var read:Reader = lineItr.next() ; 
			str = str+read.toString() ; 
	     }
    	args.PDFContent = str ; 
	}
	
   	return PIPELET_NEXT;
}
