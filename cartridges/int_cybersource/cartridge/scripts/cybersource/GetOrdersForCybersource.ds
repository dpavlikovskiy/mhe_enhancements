/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*	@input forRefund : Boolean
*   @output OrdersItr : dw.util.SeekableIterator
*
*/
importPackage( dw.system );
importPackage( dw.order );
importPackage( dw.util );
 
function execute( pdict : PipelineDictionary ) : Number
{
	var STATUS_READY : String = "READY";
	var STATUS_TRIGGERED : String = "TRIGGERED";	
	var ordersItr : SeekableIterator = null;
	
	var queryString : String = "custom.cs_SettlementStatus = {0}";
		
	if (pdict.forRefund){
		queryString = queryString  + " AND custom.cs_RefundStatus = {1}";
		ordersItr = OrderMgr.queryOrders(queryString, null, STATUS_TRIGGERED, STATUS_READY);
		Logger.error("Cybersource Refund : Total " + ordersItr.count + " Order(s) Found for Refund.");   				
	
	} else {		
		queryString = queryString  + " AND custom.cs_RefundStatus = NULL";		
		ordersItr = OrderMgr.queryOrders(queryString, null, STATUS_READY);		
		Logger.error("Cybersource Settlement : Total " + ordersItr.count + " Order(s) Found for Settlement.");
	}
	
	pdict.OrdersItr = ordersItr;
   	return PIPELET_NEXT;
}
