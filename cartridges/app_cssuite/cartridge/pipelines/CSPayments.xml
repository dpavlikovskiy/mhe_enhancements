<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline group="CustomerServiceSuite" type="view">
  <description>This pipeline is all about payment instruments. It is providing start nodes to add and remove payment instruments of various kinds.</description>
  <branch basename="GetPaymentInfo">
    <segment>
      <node>
        <start-node name="GetPaymentInfo" secure="true"/>
        <node-display x="1" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="CSCart-PublicGetBasket"/>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="Get all payments of basket" pipelet-name="UpdateFormWithObject" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentForms.csspayment.paymentinstruments" key="Form"/>
          <key-binding alias="Basket.paymentInstruments" key="Object"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-continue-node secure="true" start-name="paymentInfo" transaction-required="false">
          <template buffered="true" dynamic="false" name="cssuite/payment/paymentinfo"/>
        </interaction-continue-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="removePaymentInstrument">
          <transition target-connector="in"/>
          <segment>
            <node>
              <decision-node condition-key="TriggeredAction.object.paymentMethod == 'METHOD_PPGC' || TriggeredAction.object.paymentMethod == 'METHOD_SVGC'" condition-operator="expr"/>
              <node-display x="0" y="2"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="true"/>
                      <config-property key="OnError" value="PIPELET_ERROR"/>
                      <config-property key="ScriptFile" value="payments/RedestributeGCAmount.ds"/>
                      <key-binding alias="ScriptLog" key="ScriptLog"/>
                      <key-binding alias="Basket" key="Basket"/>
                      <key-binding alias="TriggeredAction.object" key="GiftCardPaymentInstrument"/>
                      <key-binding alias="Status" key="Status"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                    <branch basename="b2" source-connector="error">
                      <transition target-connector="in2" target-path="./+1">
                        <transition-display>
                          <bend-point relative-to="source" x="1" y="1"/>
                        </transition-display>
                      </transition>
                    </branch>
                  </node>
                  <transition target-connector="in1" target-path="./+1"/>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition/>
                  <node>
                    <decision-node condition-key="!empty(TriggeredAction.object.paymentTransaction.transactionID)" condition-operator="expr"/>
                    <node-display x="0" y="1"/>
                    <branch basename="b2" source-connector="yes">
                      <transition target-connector="in"/>
                      <segment>
                        <node>
                          <pipelet-node custom-name="set pi.custom.toRemove to 'true'" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                            <config-property key="Transactional" value="true"/>
                            <key-binding alias="true" key="From_0"/>
                            <key-binding alias="TriggeredAction.object.custom.toRemove" key="To_0"/>
                            <key-binding alias="null" key="From_1"/>
                            <key-binding alias="null" key="To_1"/>
                            <key-binding alias="null" key="From_2"/>
                            <key-binding alias="null" key="To_2"/>
                            <key-binding alias="null" key="From_3"/>
                            <key-binding alias="null" key="To_3"/>
                            <key-binding alias="null" key="From_4"/>
                            <key-binding alias="null" key="To_4"/>
                            <key-binding alias="null" key="From_5"/>
                            <key-binding alias="null" key="To_5"/>
                            <key-binding alias="null" key="From_6"/>
                            <key-binding alias="null" key="To_6"/>
                            <key-binding alias="null" key="From_7"/>
                            <key-binding alias="null" key="To_7"/>
                            <key-binding alias="null" key="From_8"/>
                            <key-binding alias="null" key="To_8"/>
                            <key-binding alias="null" key="From_9"/>
                            <key-binding alias="null" key="To_9"/>
                          </pipelet-node>
                          <node-display x="0" y="1"/>
                        </node>
                        <transition target-connector="in1" target-path="../../+2">
                          <transition-display>
                            <bend-point relative-to="source" x="0" y="2"/>
                          </transition-display>
                        </transition>
                      </segment>
                    </branch>
                  </node>
                  <transition target-connector="in2" target-path="../+1"/>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1">
              <transition-display>
                <bend-point relative-to="source" x="2" y="0"/>
              </transition-display>
            </transition>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="3"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="RemoveBasketPaymentInstrument" pipelet-set-identifier="bc_api">
                <key-binding alias="TriggeredAction.object" key="PaymentInstrument"/>
                <key-binding alias="null" key="PaymentInstruments"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in2" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node custom-name="SuccessJSAction" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="SuccessJSAction" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
                <key-binding alias="&quot;Order.orderStatus = Order.STATUS_MODIFIED;&quot;" key="From_0"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../+1">
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
                <bend-point relative-to="source" x="1" y="1"/>
                <bend-point relative-to="target" x="1" y="0"/>
              </transition-display>
            </transition>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="1" y="0"/>
      </node>
      <transition target-connector="in3" target-path="./-1">
        <transition-display>
          <bend-point relative-to="target" x="2" y="0"/>
        </transition-display>
      </transition>
    </segment>
  </branch>
  <branch basename="AddPayment">
    <segment>
      <node>
        <start-node name="AddPayment" secure="true"/>
        <node-display x="4" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="CSCart-PublicGetBasket"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentForms.csspayment.creditcards" key="FormElement"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="dw.order.PaymentMgr.getApplicablePaymentMethods(CurrentCustomer,CountryCode,PaymentAmount)" key="From_0"/>
          <key-binding alias="ApplicablePaymentMethods" key="To_0"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
          <key-binding alias="dw.order.PaymentMgr.getPaymentMethod(dw.order.PaymentInstrument.METHOD_CREDIT_CARD).getApplicablePaymentCards(CurrentCustomer,CountryCode,PaymentAmount)" key="From_1"/>
          <key-binding alias="ApplicablePaymentCards" key="To_1"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="BindPaymentMethodsToForm" pipelet-name="SetFormOptions" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentForms.csspayment.paymentMethods.selectedPaymentMethodID" key="FormField"/>
          <key-binding alias="ApplicablePaymentMethods" key="Options"/>
          <key-binding alias="null" key="Begin"/>
          <key-binding alias="null" key="End"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="BindPaymentCardsToForm" pipelet-name="SetFormOptions" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentForms.csspayment.creditcards.newcreditcard.type" key="FormField"/>
          <key-binding alias="null" key="Begin"/>
          <key-binding alias="null" key="End"/>
          <key-binding alias="ApplicablePaymentCards" key="Options"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-continue-node secure="true" start-name="addPaymentsForm" transaction-required="false">
          <template buffered="true" dynamic="false" name="cssuite/payment/addpayment"/>
        </interaction-continue-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="create">
          <transition target-connector="in"/>
          <segment>
            <node>
              <call-node start-name-ref="CSPayments-SelectCreditCard"/>
              <node-display x="0" y="2"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in1">
                  <transition-display>
                    <bend-point relative-to="target" x="-2" y="0"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="2" y="1"/>
                  </node>
                  <transition target-connector="in1" target-path="../../+1"/>
                </segment>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node custom-name="SuccessJSAction" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="SuccessJSAction" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
                <key-binding alias="&quot;Order.orderStatus = Order.STATUS_MODIFIED;Order.getPaymentInfo();&quot;" key="From_0"/>
              </pipelet-node>
              <node-display x="0" y="2"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="common/successMessageDialog"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="2" y="0"/>
      </node>
      <transition target-connector="in1" target-path="./-1">
        <transition-display>
          <bend-point relative-to="source" x="0" y="-1"/>
        </transition-display>
      </transition>
    </segment>
  </branch>
  <branch basename="EditPayment">
    <segment>
      <node>
        <start-node name="EditPayment" secure="true"/>
        <node-display x="7" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="CSCart-PublicGetBasket"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="UpdateFormWithObject" pipelet-set-identifier="bc_api">
          <config-property key="Clear" value="true"/>
          <key-binding alias="CurrentForms.csspayment.creditcards.newcreditcard" key="Form"/>
          <key-binding alias="Basket.paymentInstrument" key="Object"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="BindPaymentCardsToForm" pipelet-name="SetFormOptions" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentForms.csspayment.creditcards.newcreditcard.type" key="FormField"/>
          <key-binding alias="null" key="Begin"/>
          <key-binding alias="null" key="End"/>
          <key-binding alias="dw.order.PaymentMgr.getPaymentMethod(dw.order.PaymentInstrument.METHOD_CREDIT_CARD).getApplicablePaymentCards(CurrentCustomer,CountryCode,PaymentAmount)" key="Options"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-continue-node secure="true" start-name="editPaymentForm" transaction-required="false">
          <template buffered="true" dynamic="false" name="cssuite/payment/editpayment"/>
        </interaction-continue-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="create">
          <transition target-connector="in"/>
          <segment>
            <node>
              <call-node start-name-ref="CSPayments-SelectCreditCard"/>
              <node-display x="0" y="2"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in1" target-path="../+1"/>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="UpdateObjectWithForm" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.csspayment.creditcards.newcreditcard" key="Form"/>
                <key-binding alias="Basket.paymentInstrument" key="Object"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b3" source-connector="error">
                <transition target-connector="in2" target-path="../+1"/>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node custom-name="SuccessJSAction" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="SuccessJSAction" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
                <key-binding alias="&quot;Order.orderStatus = Order.STATUS_MODIFIED;Order.getPaymentInfo();&quot;" key="From_0"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="common/successMessageDialog"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="1" y="2"/>
      </node>
      <transition target-connector="in1" target-path="./-1">
        <transition-display>
          <bend-point relative-to="target" x="2" y="0"/>
        </transition-display>
      </transition>
    </segment>
  </branch>
  <branch basename="SelectCreditCard">
    <segment>
      <node>
        <start-node call-mode="private" name="SelectCreditCard" secure="false"/>
        <node-display x="11" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="VerifyPaymentCard" pipelet-set-identifier="bc_api">
          <config-property key="VerifySecurityCode" value="false"/>
          <key-binding alias="dw.order.PaymentMgr.getPaymentCard(CurrentForms.csspayment.creditcards.newcreditcard.type.value)" key="PaymentCard"/>
          <key-binding alias="CurrentForms.csspayment.creditcards.newcreditcard.number.value" key="CardNumber"/>
          <key-binding alias="CurrentForms.csspayment.creditcards.newcreditcard.month.value" key="ExpirationMonth"/>
          <key-binding alias="CurrentForms.csspayment.creditcards.newcreditcard.year.value" key="ExpirationYear"/>
          <key-binding alias="CurrentForms.csspayment.creditcards.newcreditcard.cvn.value" key="CardSecurityCode"/>
          <key-binding alias="CCValidationStatus" key="Status"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <decision-node condition-key="CCValidationStatus.code.equals(dw.order.PaymentStatusCodes.CREDITCARD_INVALID_CARD_NUMBER)" condition-operator="expr"/>
              <node-display orientation="horizontal" x="1" y="0"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="1" y="0"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="InvalidateFormElement" pipelet-set-identifier="bc_api">
                      <key-binding alias="CurrentForms.csspayment.creditcards.newcreditcard.number" key="FormElement"/>
                    </pipelet-node>
                    <node-display orientation="horizontal" x="1" y="0"/>
                  </node>
                  <transition target-connector="in1" target-path="./+1"/>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="1" y="0"/>
                  </node>
                  <transition target-connector="in2" target-path="../b3.2"/>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
                <bend-point relative-to="source" x="-1" y="1"/>
                <bend-point relative-to="target" x="-1" y="0"/>
              </transition-display>
            </simple-transition>
            <node>
              <decision-node condition-key="CCValidationStatus.code.equals(dw.order.PaymentStatusCodes.CREDITCARD_INVALID_EXPIRATION_DATE)" condition-operator="expr"/>
              <node-display orientation="horizontal" x="0" y="1"/>
              <branch basename="b3" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="1" y="0"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="InvalidateFormElement" pipelet-set-identifier="bc_api">
                      <key-binding alias="CurrentForms.csspayment.creditcards.newcreditcard.year" key="FormElement"/>
                    </pipelet-node>
                    <node-display orientation="horizontal" x="1" y="0"/>
                  </node>
                  <transition target-connector="in1" target-path="./+1"/>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="1" y="0"/>
                  </node>
                  <transition target-connector="in1" target-path="../+1"/>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1">
              <transition-display>
                <bend-point relative-to="source" x="0" y="2"/>
              </transition-display>
            </transition>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="2" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../b3.2"/>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cssuite/payment/VerifyCardType.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="CurrentForms.csspayment.creditcards.newcreditcard.number.value" key="cardNumber"/>
          <key-binding alias="CurrentForms.csspayment.creditcards.newcreditcard.type.value" key="cardType"/>
        </pipelet-node>
        <node-display x="0" y="3"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="InvalidateFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.csspayment.creditcards.newcreditcard.number" key="FormElement"/>
              </pipelet-node>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="InvalidateFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.csspayment.creditcards.newcreditcard.type" key="FormElement"/>
              </pipelet-node>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
            <transition target-connector="in2" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../b4.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="payments/RemovePaymentInstruments.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="dw.order.PaymentInstrument.METHOD_CREDIT_CARD" key="PaymentMethodNotToRemove"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b4" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="3" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../b5.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="Add new CreditCard payment instrument" pipelet-name="AddPaymentInstrumentToBasket" pipelet-set-identifier="bc_api">
          <key-binding alias="dw.order.PaymentInstrument.METHOD_CREDIT_CARD" key="PaymentMethod"/>
          <key-binding alias="null" key="Amount"/>
          <key-binding alias="PaymentInstrument" key="PaymentInstrument"/>
          <key-binding alias="Basket" key="Basket"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="UpdateObjectWithForm" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentForms.csspayment.creditcards.newcreditcard" key="Form"/>
          <key-binding alias="PaymentInstrument" key="Object"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b5" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="3" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../b6.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="ScriptFile" value="payments/CalculatePaymentInstrumentTotals.ds"/>
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="GiftCertificateTotal" key="GiftCertificateTotal"/>
          <key-binding alias="OtherPaymentTotal" key="OtherPaymentTotal"/>
          <key-binding alias="OtherPaymentType" key="OtherPaymentType"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b6" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="3" y="0"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="error"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="Error">
    <segment>
      <node>
        <start-node call-mode="private" name="Error" secure="false"/>
        <node-display x="16" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <jump-node start-name-ref="CSSuite-Error"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_6">
    <segment>
      <node>
        <text-node>
          <description>Compare if we have a PPGC with transaction ID or not</description>
        </text-node>
        <node-display x="0" y="7"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_7">
    <segment>
      <node>
        <text-node>
          <description>Set the 'toRemove' flag to true ... that indicates the PPGC need to be voided while saving the order</description>
        </text-node>
        <node-display x="0" y="8"/>
      </node>
    </segment>
  </branch>
</pipeline>
