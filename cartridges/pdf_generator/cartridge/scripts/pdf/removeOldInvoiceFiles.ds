/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*-   @input ExampleIn : String This is a sample comment.
*-   @output ExampleOut : Number
*
*/
importPackage( dw.system );
importPackage( dw.system );
importPackage( dw.content );
importPackage( dw.io );
importPackage(dw.net);
importPackage(dw.util);

function execute( args : PipelineDictionary ) : Number
{

	 var folderPath : String = File.STATIC + File.SEPARATOR + "default" + File.SEPARATOR+"src"+File.SEPARATOR+"invoiceFiles"+File.SEPARATOR+Site.getCurrent().ID;
     var fileOut : File = new File(folderPath);	
     if(fileOut.exists())
     {   	    
	     	var allFiles :List = fileOut.listFiles();
	     	var currentFile : File = null;
	     	var fileModifiedTimeStamp : Number = 0;
	     	var calendar : Calendar = new Calendar();
	     	var numberOfDays : Number = Site.getCurrent().preferences.custom.saveInvoiceDays;
	     	calendar.add(Calendar.DATE,-numberOfDays);
	     	var oldTimeStamp:Number = calendar.getTime().getTime();
	     	
	     	for(var i=0;i<allFiles.size();i++)
	     	{
		     	currentFile = allFiles.get(i);
		     	fileModifiedTimeStamp = currentFile.lastModified();
		     	if(oldTimeStamp > fileModifiedTimeStamp)
		     	{
		     		currentFile.remove();
		     	}		    	
	      	}     	
      }  
   return PIPELET_NEXT;
}
