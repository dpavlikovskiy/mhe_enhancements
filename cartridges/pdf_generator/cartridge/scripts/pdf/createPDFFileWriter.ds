/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
*   where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*  @input URL : String The url to generate the pdf for.
*  @input OrderNo : String
*  @output PDFContent : String The pdf content.
*  @output fileNameToArchive : String 
*  @output file: dw.io.File
*	@output fileNameWithPath : String 
*/
importPackage( dw.system );
importPackage( dw.util );
importPackage( dw.io );
importPackage( dw.catalog );
importPackage( dw.net );
importPackage( dw.web );

function execute( args : PipelineDictionary ) : Number
{
	try
	{
		////
		var PDFContent:String="";
		var generatorURL = Site.getCurrent().preferences.custom.googleAppEngineURLforPDF+'?src='+args.URL.toString()+'?OrderId='+StringUtils.encodeBase64(args.OrderNo);
    
    	Logger.debug("Generate PDF for " + generatorURL);
    
		var httpClient : HTTPClient = new HTTPClient();
	 	httpClient.open('GET', generatorURL);
	 	httpClient.send();
	
	 	if (httpClient.statusCode == 200)
	 	{
	     	PDFContent = httpClient.text;
	 	}
	 	else
	 	{
	 		Logger.error("Status Code(Response) coming from GOOGLE APP ENGINE for pdf generator is not equal to 200...Recieved status code is "+httpClient.statusCode);
	 		return PIPELET_ERROR;
	 	}
		
		////
	    var writer : FileWriter=null;
	 
	   
	    var fileName : String = Resource.msg('invoiceattachmentname','account',null)+args.OrderNo+".pdf";
	    var fileNameWithPath : String = File.STATIC + File.SEPARATOR+"default"+ File.SEPARATOR + "src" + File.SEPARATOR + "invoiceFiles" + File.SEPARATOR+Site.getCurrent().ID+File.SEPARATOR+ fileName;
	   	
	    var fileout : File = new File(fileNameWithPath);
	    	  
	   	if(!fileout.exists())
	   	{
	   		fileout.createNewFile();
	   	}    
	   	    
		var writer  = new FileWriter(fileout);
		
		writer.writeLine(PDFContent);
		
		writer.close();
		
		args.fileNameToArchive = fileName;
		
		args.fileNameWithPath = fileNameWithPath;
		args.file=fileout;
	}
	catch(e)
	{
		Logger.error(String(e));
		return PIPELET_ERROR;
	}
    return PIPELET_NEXT;
}
