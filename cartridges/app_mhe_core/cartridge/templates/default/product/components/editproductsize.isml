<iscontent type="text/html" charset="UTF-8" compact="true"/>
<iscomment>
	Desc:
		Creates the variation section if product is a variation or a master,
		otherwise

	Parameter:
		Product - the product to use

	Options:
		none
	Available if empty: no
	Full-Block-Element: yes
</iscomment>
<isscript> importScript("util/ProductImageSO.ds"); </isscript>
<isscript>
	importScript("product/ProductUtils.ds");	
	var qs = ProductUtils.getQueryString(pdict.CurrentHttpParameterMap, ["source", "uuid"]),	
		qsAppend = qs.length==0 ? "" : ("&"+qs),
		pUtil = new ProductUtils(pdict),
		selectedVariants = [],
		selectedVariant=null,
		currentPvm = empty(pdict.CurrentVariationModel) ? pdict.Product.variationModel : pdict.CurrentVariationModel,
		selectedAtts = pdict.Product.isVariant() ? ProductUtils.getSelectedAttributes(currentPvm) : {},
		swatchAttributes = ["size"];	
</isscript>
	<isif condition="${pdict.Product.isVariant() || pdict.Product.isMaster()}">
			<isif condition="${pdict.CurrentVariationModel != null}">
				<isset name="PVM" value="${pdict.CurrentVariationModel}" scope="PAGE" />
			<iselse>
				<isset name="PVM" value="${pdict.Product.variationModel}" scope="PAGE" />
			</isif>

			<div id="curId" class="product-variations" data-current="${JSON.stringify(selectedAtts)}">
				<h2 class="visually-hidden">Variations</h2>
					<isscript>
						var sizeChartID = null;
						importPackage( dw.system );
						importPackage( dw.util );
						importScript("product/ProductUtils.ds");

				/* Get Top Level category, to create the key for getting Serving and Volume Info */
				var rootCategory : dw.catalog.Category = ProductUtils.getRootCategory(pdict.Product);
					</isscript>
					
					<iscomment>
						Filter out variation attribute values with no orderable variants.
						The "clean" ProductVariationModel of the master without any selected attribute values is used to filter the variants.
						Otherwise hasOrderableVariants() would use currently selected values resulting in a too narrow selection of variants.
					</iscomment>
					<isset name="cleanPVM" value="${(pdict.Product.variant ? pdict.Product.masterProduct.variationModel : pdict.Product.variationModel)}" scope="page"/>
			
					<isset value="${PVM.productVariationAttributes[0]}" name="VA" scope="page">
				
						<isset name="VAVALS" value="${PVM.getAllValues(VA)}" scope="page"/>
						
						<isset name="Valength" value="${VAVALS.length}" scope="page"/>
						<isset name="vaId" value="${VA.getAttributeID()}" scope="page"/>	
				
						<isif condition="${swatchAttributes.indexOf(vaId)>=0}">
							
							<iscomment>Size Chart link and is shown only once on the product detail page</iscomment>
							<isif condition="${vaId != 'color' && sizeChartID == null}">
								<isscript>
									if (sizeChartID == null) {
										var category : dw.catalog.Category = null;
										
										// get category from products primary category
										category = pdict.Product.primaryCategory;
							
										// get category from product master if not set at variant
										if( category == null && pdict.Product.variant )	{
											category = pdict.Product.masterProduct.primaryCategory;
										}
										
										while (category != null && sizeChartID == null) {
											if (('sizeChartID' in category.custom) && !empty(category.custom.sizeChartID)) {
												sizeChartID = category.custom.sizeChartID;
											}
											else {
												category = category.parent;
											}
										}							
									}
								</isscript>
								
							</isif>
					
							<iscomment>Select a default variant color if none selected.</iscomment>
							<isscript>
								var colorSelected = false;
								var variantColor = null; 
								
								// first determine if there is a selected color
								for each( var varValue in VAVALS ) { 
									if (cleanPVM.hasOrderableVariants(VA, varValue) && PVM.isSelectedAttributeValue(VA, varValue)) { 
										colorSelected = true;
										break;
									}
								}
			
								// if no color is selected, then select color
								if (!colorSelected) {
									if (PVM.getSelectedVariant() == null) {
										var variant = null;
										 if(pdict.Product.master) {
										 	if(!empty(PVM.defaultVariant)) {
										 		variant = PVM.defaultVariant;
										  	} else if(PVM.variants.length > 0) {
										  		variant = PVM.variants[0];
										  	}
										 }
										 
										 if (variant != null) {
										 	var productVariationAttribute : ProductVariationAttribute = PVM.getProductVariationAttribute("color");
										 	if (productVariationAttribute != null && PVM.getVariationValue(variant, productVariationAttribute) != null) {
										 		variantColor = PVM.getVariationValue(variant, productVariationAttribute).value;
										 	}
										 }
									}
								}
						
							</isscript>			
							
							 		
							<isif condition="${vaId=='size'}">
					            <isset name="selectedSwatchValue" scope="page" value="${null}" />
							    <div class="customSelect">
							    	<span>${Resource.msg('global.chooseSize','locale',null)}</span>
							    	<div class="nano">
									    <ul class="variation-select customOptions content"  name="selectsize" id="selectsize">
											<isloop items="${PVM.variants}" var="VAR" status="loopstatus">																		
											<isset name="VV" value="${PVM.getVariationValue(VAR, VA)}" scope="page"/>
									        <isset name="key" value="${rootCategory.ID + '-' + VV.value}" scope="page" />						
											<isset name="selectable" value="${PVM.hasOrderableVariants(VA, VV)}" scope="page" />											
											<isset name="isSelected" value="${PVM.isSelectedAttributeValue(VA, VV)}" scope="page" />
											<isset name="swatchClass" value="${(selectable && isSelected ? 'selected' : 'emptyswatch')+(selectable ? '' : ' unselectable')}" scope="page" />
											<isset name="displayValue" value="${VV.displayValue==null?VV.value:VV.displayValue}" scope="page"/>											
										 	<isset name="serving" value="${ProductUtils.getValueFromSitePrefEnum('stdBottleEquivalent', key)}" scope="page"/>
											<isset name="volume" value="${ProductUtils.getValueFromSitePrefEnum('sizeVolume', key)}" scope="page"/>
											<isset name="className" value="active" scope="page"/>
											<isscript>													
												var isAvailable = selectedVariants.length > 0 ? pUtil.isVariantAvailable(VA.ID+"-"+VV.value,selectedVariants) : true;
											</isscript>
										  	<isset name="linkURL" value="${PVM.urlSelectVariationValue('Cart-UpdateLineItem', VA, VV)}" scope="page"/>
											<isif condition="${isSelected}">												
												<isscript>var selectedVariant = VA.ID+"-"+VV.value;</isscript>
												<isset name="selectedSwatchValue" scope="page" value="${displayValue}" />
												<isset name="linkURL" value="${PVM.urlUnselectVariationValue('Cart-UpdateLineItem', VA)}" scope="page"/>
											</isif>
											<isif condition="${displayValue == selectedSwatchValue}">
											 	<isset name="className" value="${className + ' inactive'}" scope="page"/>
											</isif>
											<iscomment>BEGIN -- Get Pricing of the Variant</iscomment>
											<isset name="OrgProduct" value="${pdict.Product}" scope="page"/>
											<isset name="Product" value="${VAR}" scope="pdict"/>
											<isinclude template="product/components/pricingjson"/>
											<isif condition="${!empty(OrgProduct)}">
												<iscomment>Restore current product instance</iscomment>
												<isset name="Product" value="${OrgProduct}" scope="pdict"/>
												<isset name="OrgProduct" value="${null}" scope="page"/>
											</isif>
											<iscomment>FINISH -- Get Pricing of the Variant</iscomment>
											<isif condition="${(SalesPrice.valueOrNull != null)}">
										    <li class="${className}" data-titleurl='{"title":"${linkURL}"}'>
												<span class="cont">
													<span class="pName"><isprint value="${displayValue}"/> ${volume}</span>
													<span class="pDetails">
														<span class="pPrice"><isprint value="${SalesPrice}"/></span>
														<isif condition="${!empty(VAR.unit)}">
														<span>${Resource.msg('product.unit.'+VAR.unit,'product',null)}</span>
														</isif>
														<isif condition="${!cleanPVM.hasOrderableVariants(VA, VV)}">
															<span class="oos">${Resource.msg('global.allnotavailable','locale',null)}</span>
														</isif>
													</span>
												</span>
											 </li>
											 </isif>
									 		</isloop>
										</ul>
									</div>
								</div>
								<isscript>if (selectedVariant && selectedVariant.length>0) {selectedVariants.push(selectedVariant);}</isscript>									
								<iscomment>Dkum37: It is not required discussed with Naveen and Pramod, "To be removed later"
								<li class="selected-value">
									<isif condition="${typeof selectedSwatchValue !== 'undefined' && selectedSwatchValue}">
										<isprint value="${selectedSwatchValue}"/>
									</isif>
								</li>
								</iscomment>
								      			
							<iselse>
				 				<isloop items="${VAVALS}" var="VV">
									<isif condition="${cleanPVM.hasOrderableVariants(VA, VV)}">
										<iscomment>									
										<isset name="lgImage" value="${VV.getImage('large')}" scope="page"/>
										</iscomment>
										<isset name="lgImage" value="${(new ProductImage('cart-editproductsize-lgimage', VV,0))}" scope="page"/>
										<isset name="swImage" value="${VV.getImage('swatch')}" scope="page"/>
										<isset name="selectable" value="${PVM.hasOrderableVariants(VA, VV)}" scope="page" />											
										<isset name="isSelected" value="${PVM.isSelectedAttributeValue(VA, VV)}" scope="page" />
										<isset name="swatchClass" value="${(selectable && isSelected ? 'selected' : 'emptyswatch')+(selectable ? '' : ' unselectable')}" scope="page" />
										<isset name="displayValue" value="${VV.displayValue==null?VV.value:VV.displayValue}" scope="page"/>											
										<isset name="linkURL" value="${PVM.urlSelectVariationValue('Product-Variation', VA, VV)}" scope="page"/>
										<isif condition="${isSelected}">												
											<isset name="selectedSwatchValue" scope="page" value="${displayValue}" />
											<isset name="linkURL" value="${PVM.urlUnselectVariationValue('Product-Variation', VA)}" scope="page"/>
											<isscript>selectedVariants.push(VA.ID+"-"+VV.value);</isscript>
										</isif>
										<isif condition="${!empty(VV.getImage('hi-res'))}">
											<iscomment>
											<isset name="hiResURL" scope="page" value="${VV.getImage('hi-res').getURL()}" />
											</iscomment>
											<isset name="hiResURL" value="${(new ProductImage('cart-editproductsize-hiResURL', VV,0)).getURL()}" scope="page"/>
										<iselse>
											<isset name="hiResURL" scope="page" value="${''}" />
										</isif>
										<a href="${linkURL+qsAppend}" class="swatchanchor"
										   <isif condition="${!empty(swImage)}">style="background: url(${swImage.getURL()}) repeat-y;"</isif>										   
										   data-lgimg='{"url":"${lgImage.getURL()}", "title":"${VV.getDisplayValue()}", "alt":"${VV.getDisplayValue()}", "hires":"${hiResURL}"}'>										   
										   	<isprint value="${displayValue}"/>
										</a>								
									</isif>
								</isloop>
									<iscomment>Dkum37: "To be removed later".
									<li class="selected-value">
										<isif condition="${typeof selectedSwatchValue !== 'undefined' && selectedSwatchValue}">
											<isprint value="${selectedSwatchValue}"/>
										</isif>
									</li>
									</iscomment>	
							   </isif>
							<iselse>
								<iscomment>Drop down list</iscomment>
								<li class="attribute variant-dropdown">							
									<label for="va-${vaId}">
										<isprint value="${VA.displayName}"/>:
									</label>		
									<select class="variation-select" id="va-${vaId}" name="${'dwvar_' + pdict.Product.variationModel.master.ID + '_' + vaId}">
										<option value="">${Resource.msg('global.select','locale',null)} <isprint value="${VA.displayName}"/></option>
										<isscript>var selectedVariant = null</isscript>
										<isloop items="${VAVALS}" var="VV">
											<iscomment>filter out unorderable variation attribute values</iscomment>						
											
											<isif condition="${cleanPVM.hasOrderableVariants(VA, VV)}">
												<isscript>
													var selected = PVM.isSelectedAttributeValue(VA, VV) ? 'selected="selected"' : '';
													var linkURL = selected ? PVM.urlUnselectVariationValue('Product-Variation', VA) : PVM.urlSelectVariationValue('Product-Variation', VA, VV);
													if (selected.length > 0) {
														selectedVariant = VA.ID+"-"+VV.value;
													}
												</isscript>
												<isscript>													
													var isAvailable = selectedVariants.length > 0 ? pUtil.isVariantAvailable(VA.ID+"-"+VV.value,selectedVariants) : true;
													var displayValue = (VV.displayValue||VV.value);
												</isscript>
																						
												<isif condition="${isAvailable}">
													<option value="${PVM.urlSelectVariationValue('Product-Variation', VA, VV)}&source=${pdict.CurrentHttpParameterMap.source.stringValue||'detail'}" <isprint value="${selected}" encoding="off"/>>
														<isprint value="${(VV.displayValue||VV.value)}"/>
													</option>
												</isif>
											</isif>
										</isloop>
										<isscript>if (selectedVariant && selectedVariant.length>0) {selectedVariants.push(selectedVariant);}</isscript>
									</select>							
							
							</isif>
			</div>
	
	</isif>
<script>
jQuery(document).ready(function () {
	$(".variation-select li").on("click", function() {
		var el = $(this);
		var config = el.data('titleurl');
	    var uuid=$(this).parents(".selectCont").attr("id");
	    var thisTitle = config.title;
		var newurl = app.util.appendParamsToUrl(thisTitle,{uuid:uuid});
		var url = app.util.appendParamsToUrl(newurl,{format:"ajax"});
		var options = {
				url: url,
				type: "POST"
		};
		$.ajax( options ).done(function(data){
			 app.page.refresh();
		}); 
	 });
});

 
</script>