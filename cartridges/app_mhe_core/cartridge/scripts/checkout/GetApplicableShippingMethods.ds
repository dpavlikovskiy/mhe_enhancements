/**
 * GetApplicableShippingMethods.ds
 *
 * This script retrieves the list of applicable shipping methods
 * for a given shipment and a full or partial shipping address.
 * A shipping method is applicable if it does not exclude any of 
 * the products in the shipment, and does not exclude the specified 
 * address.
 * 
 * @input Basket: dw.order.Basket
 * @input Country : String
 * @input State : String
 * @input PostalCode : String
 * @input City : String
 * @output ShippingMethods : Object The shipping methods.
 */

importPackage( dw.customer );
importPackage( dw.order );
importPackage( dw.campaign );
importPackage( dw.system );
importPackage( dw.util );
importPackage( dw.web );


function execute( pdict : PipelineDictionary ) : Number
{
	var basket : Basket = pdict.Basket;
	var shipment : Shipment = basket.defaultShipment;

	// country code
	var countryCode : String = pdict.Country;
	if (countryCode == null || StringUtils.trim(countryCode) == "")
	{
		// SiteGenesis-specific default used to define list of shipping methods shown by default.
		// Modify as needed.
		countryCode = "GB";
	}
	else
	{
		countryCode = StringUtils.trim(countryCode);
	}
	
	// state code
	/*var stateCode : String = pdict.State;
	if (stateCode == null || StringUtils.trim(stateCode) == "")
	{
		// SiteGenesis-specific default used to define list of shipping methods shown by default.
		// Modify as needed.
		stateCode = "NY"; 
	}
	else
	{
		stateCode = StringUtils.trim(stateCode);
	}
	*/
	
	// postal code
	var postalCode : String	= pdict.PostalCode;
	if (postalCode != null)
	{
		postalCode = StringUtils.trim(postalCode);	// no need for defaults
	}
	
	// city
	var city : String = pdict.City;
	if (city != null)
	{
		city = StringUtils.trim(city);  // no need for defaults
	}
	
	
	
	// Construct an address from request parameters.
	var addressObj = new Object();
	addressObj.countryCode = countryCode;
	//addressObj.stateCode = stateCode;
	addressObj.postalCode = postalCode;
	addressObj.city = city;
	
	// Retrieve the list of applicabnle shipping methods for the given shipment and address.
	var shippingModel : ShipmentShippingModel = ShippingMgr.getShipmentShippingModel(shipment);
	var ret : Collection = new ArrayList();
	ret = shippingModel.getApplicableShippingMethods(addressObj);
	pdict.ShippingMethods = ret;
	
    return PIPELET_NEXT;
}
