/**
 * This script sets the shipping method of the given shipment to
 * the passed method.  The list of allowed shipping methods may be
 * passed in as a parameter.  If not, then it is retrieved using
 * ShipmentShippingModel.getApplicableShippingMetods().
 * Then it checks if the ShippingMethodNominatedDate is required for the selected method
 * and if is required then whether the user has selected the date or not.
 *
 * @input Shipment: dw.order.Shipment The shipment to update the shipping method for.
 * @input ShippingMethods : dw.util.Collection The list of applicable shipping methods.
 * @input ShippingMethodID : String The ID of the shipping method to set for the shipment.
 * @input ShippingMethod : dw.order.ShippingMethod The shipping method to set for the shipment.
 * @input ShippingMethodNominatedDate : String The ID of the shipping method to set for the shipment.

 */
importPackage( dw.customer );
importPackage( dw.order );
importPackage( dw.system );
importPackage( dw.util );
importPackage( dw.web );

function execute( pdict : PipelineDictionary ) : Number
{
	
	var shipment : dw.order.Shipment = pdict.Shipment;
	var shippingMethodID : String = pdict.ShippingMethodID;
	var shippingMethodNominatedDate : String = pdict.ShippingMethodNominatedDate;
	
	var shippingMethod : dw.order.ShippingMethod = pdict.ShippingMethod;
	
	// Determine the list of applicable shipping methods.
	var shippingMethods : Collection = pdict.ShippingMethods;
	if (shippingMethods == null)
	{
		shippingMethods = ShippingMgr.getShipmentShippingModel(shipment).getApplicableShippingMethods();
	}

	// 1) Try to set the shipment shipping method to the passed one.
	var shippingMethodsIter : Iterator = shippingMethods.iterator();
	while( shippingMethodsIter.hasNext() )
	{
		var method : ShippingMethod = shippingMethodsIter.next();
		
		if (shippingMethod == null)
		{
			if( !method.ID.equals( shippingMethodID ) ) continue;
		}
		else
		{
			if( method != shippingMethod ) continue;
		}
		
		// set this shipping method
		shipment.setShippingMethod( method );
		
		
		var isCalenderRequired : Boolean = method.custom.isCalenderRequired;
		if(empty(shippingMethodNominatedDate) && !empty(isCalenderRequired) && isCalenderRequired){
			//pdict.requestedDeliveryDateField.invalidateFormElement();
			return PIPELET_ERROR;
		}	
 		
		
 
		return PIPELET_NEXT;
	}
	

	return PIPELET_NEXT;
}