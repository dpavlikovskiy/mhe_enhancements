importPackage( dw.system );
importPackage( dw.customer );
importPackage( dw.order );
importPackage( dw.util );

function CartUtils() {}

CartUtils.getAddressList = function(basket, currentCustomer, includeLineItems) {	
	function getAddressObject(addy, plist) {
		var display = addy.ID;
		var key = addy.ID;
		var addyType = "customer";
		if (!empty(plist)) {
			addyType = plist.type;
			var rsc = plist.type==ProductList.TYPE_WISH_LIST ? "wishlist" : "giftregistry"; 
			display = dw.web.Resource.msgf("singleshipping."+rsc, 'checkout', null, plist.owner.profile.firstName);
			key = plist.owner.profile.credentials.login+"??"+addy.ID; 
		}
		
		return {
			UUID : addy.UUID,	
			ID: addy.ID,
			addressType: addy.custom.addressType,
			key: key,
            title: addy.title,
            firstName: addy.firstName,
            lastName: addy.lastName,
            address1: addy.address1,
            address2: addy.address2,
            postalCode: addy.postalCode,
            city: addy.city,
            stateCode: addy.stateCode,
            countryCode: addy.countryCode.value,
            phone: addy.phone,            
            type: addyType,
            displayValue: display            
		};
	}
		
	var al = new ArrayList();
		
	if (empty(basket) || empty(basket.productLineItems)) {
		return al;
	}
	
	if (currentCustomer.authenticated && currentCustomer.profile.addressBook.addresses.size() > 0) {
		var addys = currentCustomer.profile.addressBook.addresses;
		for(var i=0,len=addys.length;i<len;i++) {
			al.add(getAddressObject(addys[i], null));
		}
	}	
	if (!includeLineItems) {
		return al;
	}
	
	var lineItems = basket.productLineItems;
	for(var i=0,len=lineItems.length;i<len;i++) {
		var lineItem : ProductLineItem = lineItems[i];
		// if no wish list or registry address items, 
		// or the list owner is the customer, 
		// or the addy is empty, check the next item
		if (empty(lineItem.productListItem) 
			|| empty(lineItem.productListItem.list)
			|| currentCustomer == lineItem.productListItem.list.owner 
			|| empty(lineItem.productListItem.list.shippingAddress)) {
			continue;
		}
		
		// finally...		
		var plist = lineItem.productListItem.list;		
		var addy : CustomerAddress = plist.shippingAddress;	
		
		// build object which can be converted to a json string using JSON.stringify()		
		al.add(getAddressObject(addy, plist));		
	}	
	return al;
};

CartUtils.getProductListAddress = function(id : String, basket, currentCustomer) {
	var addys = CartUtils.getAddressList(basket, currentCustomer);
	if (id in addys) {
		return addys[id];
	}
	for(var i=0,len=addys.length;i<len;i++) {
		if (addys[i].id==id || addys[i].key==id) {
			return addys[i];
		}
	}	
	return {};
}


//Get the next custom position to set in the product line item
CartUtils.getNextCustomPositionForPLI = function (basket : Basket) : Number {

	var customPosToSet = 1;
	/*
	var pliList : dw.util.List = new dw.util.ArrayList(basket.productLineItems);
	if (pliList != null){
		
		var itr : Iterator = pliList.iterator();
		while (itr.hasNext()) {
			var productLineItem : dw.order.ProductLineItem = itr.next();
			var customPos : Number = productLineItem.custom.pliPosition;
			if (customPos > customPosToSet){
				customPosToSet = customPos;
			}
		}
	}
	*/
	//Changing code to avoid the traversing of whole basket everytime.
	if ("cutomPositionCounter" in basket.custom && basket.custom.cutomPositionCounter != null ){
		customPosToSet = basket.custom.cutomPositionCounter++ ;
	} else {
		basket.custom.cutomPositionCounter = 2;
	}
	
	//customPosToSet += 1;
	
	return customPosToSet;
}

//Get the next system position to set in the product line item
CartUtils.getNextSystemPositionForPLI = function (basket : Basket) : Number {

	var systemPosToSet = 1;
	var pliList : dw.util.List = new dw.util.ArrayList(basket.productLineItems);
	if (pliList != null){ 
		var productLineItem : dw.order.ProductLineItem = pliList.pop();
		if (productLineItem != null){
			var systemPos : Number = productLineItem.position;
			systemPosToSet = systemPos + 1;
		}
	}
	pliList = null;
	return systemPosToSet;
}