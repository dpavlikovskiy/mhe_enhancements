/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @input customObj : dw.object.CustomObject
*	@input customer : dw.customer.Customer
*   @input writer : dw.io.CSVStreamWriter This is a sample comment.
*   
*   @output errorMsgFromScript : String
*
*/
importPackage( dw.system );
importPackage( dw.catalog );
importPackage( dw.io );
importPackage( dw.util );
importPackage( dw.customer );
importPackage( dw.web );

function execute( args : PipelineDictionary ) : Number
{
	try{
		var str : String = "";
		var arr : Array = null;
		var writer : CSVStreamWriter = args.writer;
		var customObj:dw.object.CustomObject = args.customObj;
		var customer : Customer = args.customer;
		var activeData : CustomerActiveData = null;
		if (customer != null){
			activeData = customer.activeData;
		}
		
		var referrerEmail:String = !empty(customObj.custom.referrerEmail)?customObj.custom.referrerEmail:"NA";
		var referrerFname:String = !empty(customObj.custom.referrerFName)?customObj.custom.referrerFName:"NA";
		var referrerLName:String = !empty(customObj.custom.referrerLName)?customObj.custom.referrerLName:"NA";
		
		var refereeEmail:String  = customObj.custom.refereeEmail;	
		var refereeTitle:String  = customObj.custom.refereeTitle;
		if(refereeTitle==null){
			refereeTitle="";
		}
			
		var refereeSalutation:String  = customObj.custom.refereeSalutation;
		var refereeFname:String  = customObj.custom.refereeFName;
		var refereeLName:String  = customObj.custom.refereeLName;
			
		var refereeApproved: String =     !customObj.custom.approved?"no":"yes";
		var refereeRegistered: String =   !customObj.custom.refereeRegistered?"no":"yes";
		var refereeRegisteredOn: String =  customer!=null?customer.profile.creationDate:"NA";
		var refereeSpentVal: String = "NA";
		var refereeLastMonthSpentVal: String = "NA";
		if (activeData!=null){
			refereeSpentVal = activeData.orderValue!=null?activeData.orderValue:0;	
				refereeLastMonthSpentVal = activeData.orderValueMonth!=null?activeData.orderValueMonth:0;	
		}		
		
			
		
		var refereeChannel:String =       !empty(customObj.custom.channel)?customObj.custom.channel:"NA";
		var source: String =              !empty(customObj.custom.source)?customObj.custom.source:"NA";
		
		var orderPlaced : String = "no";
		if (activeData!=null){
			if (activeData.orders!=null  &&  !empty(activeData.orders) &&  activeData.orders>0) {
				orderPlaced = "yes";
			}
		}
		
		var dateCreated : Date = customObj.creationDate.getDate()+"/"+(customObj.creationDate.getMonth()+1)+"/"+customObj.creationDate.getFullYear();
		
		var siteId : String = dw.system.Site.getCurrent().ID;
		var str: String = referrerEmail+ "," +referrerFname + "," +referrerLName+ "," + refereeEmail + "," ;
		
		if(dw.web.Resource.msg('global.titleFlag','locale', null).equals("false") && dw.web.Resource.msg('global.salutationFlag','locale', null).equals("true"))
		{
			str = str + refereeSalutation + "," ;
		}
		else if(dw.web.Resource.msg('global.titleFlag','locale', null).equals("true") && dw.web.Resource.msg('global.salutationFlag','locale', null).equals("true"))
		{
			str = str + refereeTitle + "," + refereeSalutation + "," ;
		}
		else if(dw.web.Resource.msg('global.titleFlag','locale', null).equals("true") && dw.web.Resource.msg('global.salutationFlag','locale', null).equals("false"))
		{
			str = str + refereeTitle + "," ;
		}
		
		str = str + refereeFname + "," + refereeLName+ "," + refereeApproved+ "," + refereeRegistered+ "," + refereeRegisteredOn+ "," + refereeSpentVal+ "," +refereeLastMonthSpentVal+ "," + refereeChannel+ "," + source+ "," + orderPlaced+ "," +dateCreated;
		
		
		arr = str.split(",");
		writer.writeNext(arr);
		
	    return PIPELET_NEXT;
	}
	catch(e)
	{
	Logger.error(String(e));
	args.errorMsgFromScript = String(e);
	return PIPELET_ERROR;
	}
return PIPELET_NEXT;
}
